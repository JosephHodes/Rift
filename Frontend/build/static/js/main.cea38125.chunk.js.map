{"version":3,"sources":["actions/session_actions.js","util/session_api_util.js","components/session_form/login/login_form.jsx","components/session_form/login/login_form_container.jsx","components/session_form/signup/signup_form.jsx","components/session_form/signup/signup_form_container.jsx","components/splash/splash.jsx","components/splash/splash_container.jsx","util/route_util.jsx","components/app/modal/tooltip.jsx","components/app/servers/server.jsx","components/app/servers/create_server_form.jsx","components/app/servers/join_server_form.jsx","components/app/servers/dm_notification.jsx","actions/server_actions.js","util/server_api_utl.js","components/app/servers/search_server_item.jsx","components/app/servers/search_servers_form.jsx","components/app/servers/servers/servers.jsx","components/app/servers/servers/servers_container.jsx","components/app/channels/channels/channel.jsx","components/app/channels/create_channel_form.jsx","components/app/channels/voice_channels/voice_channel.jsx","components/app/channels/voice_channels/voice_channels.jsx","actions/channel_actions.js","util/channel_api_util.js","actions/voice_channel_actions.js","util/voice_channel_api_util.js","components/app/channels/voice_channels/voice_channels_container.jsx","components/app/channels/edit_user_form.jsx","components/app/channels/user_bar/user_bar.jsx","components/app/channels/user_bar/user_bar_container.jsx","components/app/channels/channels/channels.jsx","components/app/channels/channels/channels_container.jsx","components/app/header/header/header.jsx","components/app/header/header/header_container.jsx","components/app/chat/message_form.jsx","actions/friends_actions.js","util/friends_api_util.js","components/app/modal/user_popup.jsx","components/app/modal/user_popup_container.jsx","components/app/chat/message.jsx","components/app/chat/chat/chat.jsx","actions/notification_actions.js","components/app/chat/chat/chat_container.jsx","components/app/server_members/server_member.jsx","components/app/server_members/server_members/server_members.jsx","actions/ui_actions.js","components/app/server_members/server_members/server_members_container.jsx","components/app/app_routes/server_main.jsx","components/app/app_routes/server_route.jsx","components/app/channels/dm_channels/dm_channel.jsx","components/app/channels/dm_channels/dm_channels.jsx","components/app/channels/dm_channels/dm_channels_container.jsx","components/app/header/me_header/me_header.jsx","components/app/header/me_header/me_header_container.jsx","components/app/app_routes/me_main.jsx","components/app/friends/friends_header.jsx","components/app/friends/mutual_server.jsx","components/app/friends/friend.jsx","components/app/friends/friends_list/friends.jsx","components/app/friends/friends_list/friends_container.jsx","components/app/friends/pending_friends/pending_friends.jsx","components/app/friends/pending_friends/pending_friends_container.jsx","components/app/friends/friends_list/online_friends_container.jsx","components/app/app_routes/friends_main.jsx","components/app/app_routes/me_route.jsx","components/app/loading_screen.jsx","components/app/app_root.jsx","components/app.jsx","components/root.jsx","reducers/entities/users_reducer.js","reducers/entities/servers_reducer.js","reducers/entities/channels_reducer.js","reducers/entities/friend_requests_reducer.js","reducers/entities/friends_reducer.js","reducers/entities/voice_channels_reducer.js","reducers/entities/entities_reducer.js","reducers/ui_reducer.js","reducers/loading_reducer.js","reducers/session_reducer.js","reducers/errors/errors_reducer.js","reducers/errors/session_errors_reducer.js","reducers/errors/server_errors_reducer.js","reducers/errors/channel_errors_reducer.js","reducers/notifications/dm_notifications_reducer.js","reducers/notifications/notifications_reducer.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["RECEIVE_CURRENT_USER","RECEIVE_USER","RECEIVE_CURRENT_USER_DATA","LOGOUT_CURRENT_USER","RECEIVE_SESSION_ERRORS","REMOVE_SESSION_ERRORS","receiveCurrentUser","currentUser","type","receiveErrors","errors","removeErrors","signup","user","dispatch","Axios","method","url","data","APIUtil","then","err","responseJSON","editUser","formData","get","contentType","processData","login","fetchCurrentUserData","userData","currentUserData","logout","LoginForm","props","state","username","password","handleSubmit","bind","loginAsGuest","loginAsGuestHelper","document","body","style","overflow","this","nameInput","focus","field","e","setState","currentTarget","value","preventDefault","split","submit","getElementById","length","shift","setTimeout","click","history","push","className","src","alt","action","onSubmit","onChange","update","ref","input","id","onClick","to","React","Component","connect","session","console","log","SignupForm","email","removeAttribute","emailError","find","el","includes","usernameError","passwordError","Splash","handleLogin","href","target","currentUserId","mapStateToProps","loggedIn","Boolean","AuthRoute","withRouter","component","path","exact","render","ProtectedRoute","Tooltip","trigger","position","on","overlayStyle","width","backgroundColor","arrowStyle","zIndex","contentStyle","whiteSpace","fontFamily","borderRadius","color","border","fontSize","display","padding","pointerEvents","text","Server","server","root_channel","activeClassName","icon_url","backgroundImage","backgroundSize","onKeyDown","name","CreateServerForm","avatarFile","avatarUrl","handleRedirect","handleFile","handleRemove","closeModal","file","files","fileReader","FileReader","onloadend","result","readAsDataURL","FormData","append","createServer","placeholder","backgourndColor","multipleaccept","JoinServerForm","joinServer","marginTop","DmNotification","classText","notification","channelId","image_url","count","RECEIVE_SERVERS","RECEIVE_USERS","RECEIVE_SERVER","RECEIVE_SERVER_ERRORS","REMOVE_SERVER_ERRORS","REMOVE_SERVER","receiveUsers","users","receiveServer","userId","removeServer","serverId","fetchServers","servers","receiveServers","fetchMembers","requests","admin_id","deleteServer","SearchServerItem","marginLeft","SearchServersForm","searchInput","createRef","current","filter","match","RegExp","map","idx","marginBottom","autoComplete","Object","values","entities","Servers","useState","setShowModal","setShowSearchModal","content","setContent","handleOpenModal","handleCloseModal","handleOpenSearchModal","handleCloseSearchModal","removeServerErrors","updateContent","dmNotifications","Modal","setAppElement","onlineCount","height","viewBox","fill","fillRule","d","closeTimeoutMS","isOpen","showModal","onRequestClose","overlay","margin","background","boxSizing","showSearchModal","contentLabel","boxShadow","flexDirection","friends","forEach","friendId","online","notifications","dm","authorId","Channel","active","handleMouseEnter","handleMouseLeave","handleDelete","channel","that","deleteChannel","params","onMouseEnter","onMouseLeave","xmlns","transform","CreateChannelForm","createChannel","merge","server_id","JOIN_ROOM","EXCHANGE","REMOVE_USER","VoiceChannel","pcPeers","remoteAudioContainer","handleClick","stopPropagation","voiceSession","handleLeaveSession","leaveVoiceChannel","deleteVoiceChannel","selectVoiceChannel","select","navigator","mediaDevices","getUserMedia","audio","video","stream","localstream","handleJoinSession","prevProps","selected","App","cable","subscriptions","create","connected","broadcastData","from","received","joinRoom","exchange","removeUser","perform","close","unsubscribe","getAudioTracks","track","stop","remove","isOffer","pc","RTCPeerConnection","iceServers","urls","getTracks","addTrack","createOffer","offer","setLocalDescription","sdp","JSON","stringify","localDescription","onicecandidate","event","candidate","ontrack","element","createElement","autoplay","srcObject","streams","appendChild","oniceconnectionstatechange","iceConnectionState","createPC","addIceCandidate","RTCIceCandidate","parse","setRemoteDescription","createAnswer","answer","error","warn","VoiceChannels","voiceChannelId","fetchVoiceChannels","removeChannelErrors","voiceChannels","createVoiceChannel","RECEIVE_CHANNELS","RECEIVE_CHANNEL","REMOVE_CHANNEL","RECEIVE_CHANNEL_ERRORS","REMOVE_CHANNEL_ERRORS","receiveChannels","channels","receiveChannel","removeChannel","fetchChannels","deleteDmChannel","membership","channel_id","fetchDmChannels","createDmChannel","user_id","dm_channel","RECEIVE_VOICE_CHANNELS","RECEIVE_VOICE_CHANNEL","REMOVE_VOICE_CHANNEL","audio_channel","receiveVoiceChannels","voiceChannel","receiveVoiceChannel","ownProps","EditUserForm","UserBar","showUserModal","handleOpenUserModal","handleCloseUserModal","Channels","parseInt","Header","paddingBottom","tabIndex","role","toggleShowMembers","points","MessageForm","author_id","messageInput","subscription","speak","message","nameArr","RECEIVE_REQUESTS","RECEIVE_REQUEST","REMOVE_REQUEST","REMOVE_FRIEND","RECEIVE_FRIENDS","RECEIVE_FRIEND","receiveFriend","friend","receiveFriendRequest","friendRequest","removeFriendRequest","requestId","removeFriend","fetchFriendRequests","friendRequests","fetchFriends","friendData","createFriendRequest","friend_request","request","acceptFriendRequest","deleteFriendRequest","deleteFriend","UserPopup","addFriend","friend_id","showFriendButtonArray","concat","showFriendButton","offsetY","arrow","closeOnDocumentClick","onOpen","offsetX","showMessageButton","Message","moment","time","tz","calendar","getElementsByClassName","lines","line","j","words","word","i","separator","onLoad","bottom","scrollIntoView","replace","allowFullScreen","transition","parseDate","parseLinks","Chat","messages","parseNewMessage","loading","subscribe","removeDmNotification","messagesLoaded","messageStr","lastAuthorId","messageId","scrolled","identifier","load","parseMessages","messageArr","created_at","newMessages","union","emptyMessage","RECEIVE_DM_NOTIFICATION","REMOVE_DM_NOTIFICATION","ui","ServerMember","admin","ServerMembers","beginLoading","finishLoading","adminEl","adminOnline","adminOffline","members","member","offline","onlineMembers","offlineMembers","BEGIN_LOADING","FINISH_LOADING","sort","a","b","ServerMain","showMembers","ServerRoute","DmChannel","DMChannels","requestCount","incomingRequests","MeHeader","title","MeMain","FriendsHeader","tab","changeTab","MutualServer","Friend","handleClickParent","handleReject","handleAccept","reject","accept","mutualServers","mutualServerIds","intersection","first","borderColor","status","Friends","allFriends","PendingFriends","incomingFriends","outgoingFriends","outgoingRequests","empty","FriendsMain","tabName","MeRoute","LoadingScreen","autoPlay","loop","muted","AppRoot","class","notificationSubscription","author","location","pathname","receiveUser","receiveDmNotification","Root","store","usersReducer","newState","freeze","serversReducer","channelsReducer","friendRequestsReducer","friend_requests","friendsReducer","voiceChannelsReducer","voice_channels","combineReducers","_nullUser","sessionReducer","dmNotificationsReducer","rootReducer","localConfigureStore","preloadedState","configureStore","reducer","middleware","getDefaultMiddleware","logger","addEventListener","window","root","ReactDOM"],"mappings":"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","file":"static/js/main.cea38125.chunk.js","sourcesContent":["import * as APIUtil from '../util/session_api_util';\n\nexport const RECEIVE_CURRENT_USER = 'RECEIVE_CURRENT_USER';\nexport const RECEIVE_USER = 'RECEIVE_USER';\nexport const RECEIVE_CURRENT_USER_DATA = 'RECEIVE_CURRENT_USER_DATA';\nexport const LOGOUT_CURRENT_USER = 'LOGOUT_CURRENT_USER';\nexport const RECEIVE_SESSION_ERRORS = 'RECEIVE_SESSION_ERRORS';\nexport const REMOVE_SESSION_ERRORS = 'REMOVE_SESSION_ERRORS';\n\n\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\n\nexport const receiveUser = user => ({\n  type: RECEIVE_USER,\n  user\n});\n\nexport const receiveCurrentUserData = currentUserData => ({\n  type: RECEIVE_CURRENT_USER_DATA,\n  currentUserData\n});\n\nexport const logoutCurrentUser = () => ({\n  type: LOGOUT_CURRENT_USER,\n});\n\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors\n});\n\nexport const removeErrors = errors => ({\n  type: REMOVE_SESSION_ERRORS,\n});\n\n\nexport const signup = user => dispatch => (\n  APIUtil.signup(user).then(user => (\n    dispatch(receiveCurrentUser(user))\n  ), err => (\n    dispatch(receiveErrors(err.responseJSON))\n  ))\n);\n\nexport const editUser = formData => dispatch => ( \n  APIUtil.editUser(formData).then(user => (\n    dispatch(receiveCurrentUser(user))\n  ), err => (\n    dispatch(receiveErrors(err.responseJSON))\n  ))\n);\n\nexport const login = user => dispatch => (\n  APIUtil.login(user).then(user => (\n    dispatch(receiveCurrentUser(user))\n  ), err => (\n    dispatch(receiveErrors(err.responseJSON || err))\n  ))\n);\n\nexport const fetchCurrentUserData = () => dispatch => (\n  APIUtil.fetchCurrentUserData().then(userData => (\n    dispatch(receiveCurrentUserData(userData))\n  ))\n);\n\nexport const logout = () => dispatch => (\n  APIUtil.logout().then(user => (\n    dispatch(logoutCurrentUser())\n  ))\n);","import Axios from 'axios';\n\nexport const login = user => (\n  Axios({\n    method: 'POST',\n    url: 'localhost:3000/api/session',\n    data: { user }\n  })\n);\n\nexport const fetchCurrentUserData = () => (\n  Axios({\n    method: 'GET',\n    url: 'localhost:3000/api/users/data',\n  })\n);\n\nexport const signup = user => (\n  Axios({\n    method: 'POST',\n    url: 'localhost:3000/api/users',\n    data: { user }\n  })\n);\n\nexport const logout = () => (\n  Axios({\n    method: 'DELETE',\n    url: 'localhost:3000/api/session'\n  })\n);\n\nexport const editUser = (formData) => (\n  Axios({\n    url: `localhost:3000/api/users/${formData.get('user[id]')}`,\n    method: 'PATCH',\n    data: formData,\n    contentType: false,\n    processData: false\n  })\n);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../../../assets/stylesheets/login.scss\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n    \n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.loginAsGuest = this.loginAsGuest.bind(this);\n    this.loginAsGuestHelper = this.loginAsGuestHelper.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.style.overflow = \"hidden\";\n    this.nameInput.focus();\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  loginAsGuest(e) {\n    e.preventDefault();\n    const username = 'hodor'.split('');\n    const password = 'hodorhodor'.split('');\n    const submit = document.getElementById('session-submit');\n    this.setState({ username: '', password: '' }, () =>\n      this.loginAsGuestHelper(username, password, submit)\n    );\n  }\n\n  loginAsGuestHelper(username, password, submit) {\n    if (username.length > 0) {\n      this.setState(\n        { username: this.state.username + username.shift() }, () => {\n          setTimeout(() =>\n            this.loginAsGuestHelper(username, password, submit), 50);\n        }\n      );\n    } else if (password.length > 0) {\n      this.setState(\n        { password: this.state.password + password.shift() }, () => {\n          setTimeout(() =>\n            this.loginAsGuestHelper(username, password, submit), 50);\n        }\n      );\n    } else {\n      submit.click();\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.login(this.state).then(() => this.props.history.push('/channels/@me'));\n  }\n\n  render() {\n    return (\n      <div className=\"login-body\">\n        <img src=\"https://s3.amazonaws.com/discors-dev/Login/background.jpg\" alt=\"\" className=\"background-image\"></img>\n        {/* <img src=\"https://s3.amazonaws.com/discors-dev/Login/discors.svg\" alt=\"\" className=\"login-logo\"></img> */}\n        <form action=\"\" className=\"login-form\" onSubmit={this.handleSubmit}>\n          <div className=\"login-form-inner\">\n            <h3 className=\"form-header\">Welcome back!</h3>\n            <h4 className=\"login-form-subtitle\">We're so excited to see you again!</h4>\n            <div className=\"form-input\">\n              <div className=\"email-container\">\n                <div className=\"session-error-wrapper\">\n                  <h5 className={`email-label ${this.props.errors[0] ? 'session-error-label' : ''}`}>USERNAME</h5>\n                  <span className=\"session-errors\">{this.props.errors[0] ? `- ${this.props.errors[0]}` : ''}</span>\n                </div>\n                <input type=\"text\"\n                  value={this.state.username}\n                  onChange={this.update('username')}\n                  className={this.props.errors[0] ? 'session-error' : 'session-input'}\n                  ref={(input) => { this.nameInput = input; }}\n                />\n              </div>\n              <div>\n                <h5 className={`password-label ${this.props.errors[0] ? 'session-error-label' : ''}`}>PASSWORD</h5>\n                <input type=\"password\"\n                  value={this.state.password}\n                  onChange={this.update('password')}\n                  id=\"password-container\"\n                  className={this.props.errors[0] ? 'session-error' : 'session-input'}\n                />\n              </div>\n              <div className=\"forgot-password-container\">\n                <button type=\"button\" id=\"demo\" onClick={this.loginAsGuest}>Demo User</button>\n              </div>\n              <button id=\"session-submit\">Login</button>\n              <div className=\"need-account\">\n                <span>Need an account?</span>\n                <Link to=\"/register\" onClick={() => this.props.removeErrors()}>Register</Link>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm;","import { connect } from 'react-redux';\nimport { login, removeErrors } from '../../../actions/session_actions';\nimport LoginForm from './login_form';\n\nconst mapStateToProps = ({ errors }) => {\n  return {\n    errors: errors.session,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  console.log('dispatch:', dispatch)\n  return {\n    removeErrors: () => dispatch(removeErrors()),\n    login: (user) => dispatch(login(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.style = \"overflow: hidden;\";\n    this.nameInput.focus();\n  }\n\n  componentWillUnmount() {\n    document.body.removeAttribute(\"style\");\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.signup(this.state).then(() => this.props.history.push('/channels/@me'));\n  }\n\n  render() {\n    const emailError = this.props.errors.find((el) => el.includes('Email'));\n    const usernameError = this.props.errors.find((el) => el.includes('Username'));\n    const passwordError = this.props.errors.find((el) => el.includes('Password'));\n    return (\n      <div className=\"login-body\">\n        <img src=\"https://s3.amazonaws.com/discors-dev/Login/background.jpg\" alt=\"\" className=\"background-image\"></img>\n        {/* <img src=\"https://s3.amazonaws.com/discors-dev/Login/discors.svg\" alt=\"\" className=\"login-logo\"></img> */}\n        <form action=\"\" className=\"login-form\" onSubmit={this.handleSubmit}>\n          <div className=\"login-form-inner\">\n            <h3 className=\"form-header\">Create an account</h3>\n            <div className=\"form-input\">\n              <div className=\"email-container\">\n                <div className=\"session-error-wrapper\">\n                  <h5 className={`email-label ${emailError ? 'session-error-label' : ''}`}>EMAIL</h5>\n                  <span className=\"session-errors\">{emailError ? `-  ${emailError}` : ''}</span>\n                </div>\n                <input type=\"email\"\n                  value={this.state.email}\n                  onChange={this.update('email')}\n                  className={emailError ? 'session-error' : 'session-input'}\n                  ref={(input) => { this.nameInput = input; }}\n                />\n              </div>\n              <div>\n                <div className=\"session-error-wrapper\">\n                  <h5 className={`email-label ${usernameError ? 'session-error-label' : ''}`}>USERNAME</h5>\n                  <span className=\"session-errors\">{usernameError ? `-  ${usernameError}` : ''}</span>\n                </div>\n                <input type=\"text\"\n                  value={this.state.username}\n                  onChange={this.update('username')}\n                  className={usernameError ? 'session-error' : 'session-input'}\n                />\n              </div>\n              <div>\n                <div className=\"session-error-wrapper\">\n                  <h5 className={`email-label ${passwordError ? 'session-error-label' : ''}`}>PASSWORD</h5>\n                  <span className=\"session-errors\">{passwordError ? `-  ${passwordError}` : ''}</span>\n                </div>\n                <input type=\"password\"\n                  value={this.state.password}\n                  onChange={this.update('password')}\n                  className={passwordError ? 'session-error' : 'session-input'}\n                  id=\"password-container\"\n                />\n              </div>\n              <div className=\"forgot-password-container\">\n              </div>\n              <button id=\"session-submit\">Register</button>\n              <div className=\"need-account\">\n                <Link to=\"/login\" onClick={() => this.props.removeErrors()}>Already have an account?</Link>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SignupForm;","import { connect } from 'react-redux';\nimport { signup, removeErrors } from '../../../actions/session_actions';\nimport SignupForm from './signup_form';\n\nconst mapStateToProps = ({ errors }) => {\n  return {\n    errors: errors.session,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  console.log('dispatch:', dispatch)\n  return {\n    signup: (user) => dispatch(signup(user)),\n    removeErrors: () => dispatch(removeErrors()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupForm);\n","import React from 'react';\nimport \"../../assets/stylesheets/splash.scss\";\nimport { Link } from 'react-router-dom';\n\nclass Splash extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.style.overflow = \"visible\";\n  }\n\n  handleLogin() {\n    this.props.login().then(() => this.props.history.push('/channels/@me'));\n  }\n\n  render() {\n    return (\n      <div className=\"splash-body\">\n        <header className=\"splash-header\">\n          <nav className=\"splash-nav\">\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\" className=\"discorLogo\" alt=\"\"></img>\n            <ul className=\"rightNav\">\n              <li>\n                <a href=\"https://github.com/jeffdeliso\" target=\"_blank\">\n                  <i className=\"fab fa-github\"></i>\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www.linkedin.com/in/jdeliso/\" target=\"_blank\">\n                  <i className=\"fab fa-linkedin\"></i>\n                </a>\n              </li>\n              <li>\n                <a href=\"https://angel.co/jeffreydeliso\" target=\"_blank\">\n                  <i className=\"fab fa-angellist\"></i>\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www.jeffdeliso.com\" target=\"_blank\">\n                  <i className=\"fas fa-user-circle\"></i>\n                </a>\n              </li>\n              <li>\n                <Link to=\"/login\" className=\"openButton\">{this.props.currentUserId ? 'Open' : 'Login'}</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n\n        <section className=\"splash-main\">\n          <div className=\"content \">\n            <h1>It's time to ditch Discord.</h1>\n            <p>\n              All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone. Stop\n              paying\n              for TeamSpeak servers and hassling with Skype. Simplify your life.\n            </p>\n            <div className=\"buttons\">\n              <button className=\"downloadMac\" onClick={this.handleLogin}>Try the Demo</button>\n              <a href=\"https://www.github.com/xero-lib\" target=\"_blank\" className=\"open-discors-top\">About the Developer</a>\n            </div>\n          </div>\n\n          <div className=\"images\">\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/dot.svg\" alt=\"\" className=\"pic dot1\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/dot.svg\" alt=\"\" className=\"pic dot2\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/dot.svg\" alt=\"\" className=\"pic dot3\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/dot.svg\" alt=\"\" className=\"pic dot4\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/x.svg\" alt=\"\" className=\"pic x1\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/x.svg\" alt=\"\" className=\"pic x2\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/circle.svg\" alt=\"\" className=\"pic circle1\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/circle.svg\" alt=\"\" className=\"pic circle2\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/triangle.svg\" alt=\"\" className=\"pic triangle1\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/triangle.svg\" alt=\"\" className=\"pic triangle2\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/square.svg\" alt=\"\" className=\"pic square2\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/square.svg\" alt=\"\" className=\"pic square1\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/floppy.svg\" alt=\"\" className=\"pic floppy\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/bomb.svg\" alt=\"\" className=\"pic bomb\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/question.svg\" alt=\"\" className=\"pic question\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/speaker.svg\" alt=\"\" className=\"pic speaker\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/flask.svg\" alt=\"\" className=\"pic flask\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/computer.svg\" alt=\"\" className=\"pic computer\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/laptop.svg\" alt=\"\" className=\"pic laptop\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/controller.svg\" alt=\"\" className=\"pic controller\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/iphone.svg\" alt=\"\" className=\"pic iphone\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/android.svg\" alt=\"\" className=\"pic android\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/coin.svg\" alt=\"\" className=\"pic coin1\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/coin.svg\" alt=\"\" className=\"pic coin2\"></img>\n            <img src=\"https://s3.amazonaws.com/discors-dev/Splash/headphones.svg\" alt=\"\" className=\"pic headphones\"></img>\n          </div>\n        </section>\n\n        <footer className=\"splash-footer\">\n          <img src=\"https://s3.amazonaws.com/discors-dev/Splash/underline.svg\" alt=\"\" className=\"underline\"></img>\n          <div className=\"footer-content\">\n            <div>\n              <h2>Ready to try Rift? It's free!</h2>\n              <h3>JOIN OVER 0 PLAYERS TODAY</h3>\n            </div>\n            <Link to=\"/register\" className=\"open-discors-bottom\">{this.props.currentUserId ? 'Open Discors' : 'Sign Up Now'}</Link>\n          </div>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Splash;","import { connect } from 'react-redux';\nimport Splash from './splash';\nimport { login } from '../../actions/session_actions';\n\nconst mapStateToProps = ({ session }) => {\n  return {\n    currentUserId: session.id,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: () => dispatch(login({ username: 'hodor', password: 'hodorhodor' })),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Splash);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    !loggedIn ? (\n      <Component {...props} />\n    ) : (\n        <Redirect to=\"/channels/@me\" />\n      )\n  )} />\n);\n\nconst Protected = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    loggedIn ? (\n      <Component {...props} />\n    ) : (\n        <Redirect to=\"/\" />\n      )\n  )} />\n);\n\nconst mapStateToProps = state => (\n  { loggedIn: Boolean(state.session.id) }\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));","import React from 'react';\nimport Popup from 'reactjs-popup';\n\nclass Tooltip extends React.Component {\n  render() {\n    return (\n      <Popup trigger={this.props.component}\n        position={this.props.position}\n        on=\"hover\"\n        overlayStyle={{\n          width: `auto`,\n          backgroundColor: 'black', \n        }}\n        arrowStyle={{\n          backgroundColor: 'black',\n          zIndex: 4,\n        }}\n        contentStyle={{\n          zIndex: 4,\n          width: `auto`,\n          whiteSpace: 'nowrap',\n          fontFamily: 'main3',\n          borderRadius: 5,\n          color: '#fff',\n          backgroundColor: 'black',\n          border: 'none',\n          fontSize: '14px',\n          display: 'flex',\n          padding: '8px 10px',\n          pointerEvents: 'none',\n        }}\n      >\n        <div>{this.props.text}</div>\n      </Popup>\n    );\n  }\n}\n\nexport default Tooltip; ","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Tooltip from '../modal/tooltip';\n\nclass Server extends React.Component {\n\n  render() {\n    return (\n      <Tooltip component={\n        <NavLink to={`/channels/${this.props.server.id}/${this.props.server.root_channel}`}\n          className=\"home-icon server\"\n          activeClassName=\"serverSelected\"\n          style={ this.props.server.icon_url ?\n             { backgroundImage: `url(${this.props.server.icon_url})`, backgroundSize: '100%' } :\n             { backgroundSize: '180%' }}\n          onKeyDown={(e) => e.preventDefault()}\n        ><div className=\"server-active-icon\"></div></NavLink>\n      }\n        position=\"right center\"\n        text={this.props.server.name}\n      />\n    )\n  };\n};\n\nexport default Server;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass CreateServerForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      avatarFile: null,\n      avatarUrl: null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n    this.handleFile = this.handleFile.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  componentDidMount() {\n    this.nameInput.focus();\n  }\n\n  update(e) {\n    this.setState({\n      name: e.currentTarget.value\n    });\n  }\n\n  handleRedirect(action) {\n    this.props.closeModal();\n    this.props.history.push(`/channels/${action.server.id}/${action.server.root_channel}`);\n  }\n\n  handleFile(e) {\n    const file = e.currentTarget.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      this.setState({ avatarFile: file, avatarUrl: fileReader.result });\n    };\n\n    if (file) {\n      fileReader.readAsDataURL(file);\n    }\n  }\n\n  handleRemove(e) {\n    this.setState({ avatarFile: null, avatarUrl: null });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('server[name]', this.state.name);\n\n    if (this.state.avatarFile) {\n      formData.append('server[icon]', this.state.avatarFile);\n    }\n\n    this.props.createServer(formData).then(this.handleRedirect);\n  }\n\n  render() {\n    return (\n      <form className=\"create-server-form\" onSubmit={this.handleSubmit}>\n        <div className=\"create-server-form-top\">\n          <h5>CREATE YOUR SERVER</h5>\n          <p>By creating a server you will have access to free text chat to use amongst your friends.</p>\n          <div className=\"create-server-input-container\">\n            <div className=\"create-server-form-input\">\n              <label id={this.props.errors[0] ? 'server-errors' : ''}>SERVER NAME\n              <span>{this.props.errors[0] ? `  -  ${this.props.errors[0]}` : ''}</span>\n              </label>\n              <input type=\"text\" placeholder=\"Enter a server name\" onChange={this.update} ref={(input) => { this.nameInput = input; }} />\n            </div>\n            <div className=\"avatar-container\" id=\"icon-container\">\n              <div\n                className=\"avatar-wrapper\"\n                id=\"icon-wrapper\"\n                style={this.state.avatarUrl ? { backgroundImage: `url(${this.state.avatarUrl})` } : { backgourndColor: '#7289da' }}\n              >\n                <p>{'CHANGE \\n ICON'}</p>\n                <input type=\"file\" onChange={this.handleFile} onKeyDown={(e) => e.preventDefault()} multipleaccept=\".jpg,.jpeg,.png,.gif\" />\n                <div className=\"add-file-icon\"></div>\n              </div>\n              {this.state.avatarUrl ? <button\n                className=\"remove-avatar-button\"\n                type=\"button\"\n                onClick={this.handleRemove}\n              >REMOVE</button> : null}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"create-server-form-bottom\">\n          <button>Create</button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(CreateServerForm);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass JoinServerForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: '' };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  componentDidMount() {\n    this.nameInput.focus();\n  }\n\n  update(e) {\n    this.setState({\n      name: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.joinServer(this.state, this.props.currentUserId).then(this.handleRedirect);\n  }\n\n  handleRedirect(action) {\n    this.props.closeModal();\n    this.props.history.push(`/channels/${action.server.id}/${action.server.root_channel}`);\n  }\n\n  render() {\n    return (\n      <form className=\"create-server-form\" onSubmit={this.handleSubmit}>\n        <div className=\"create-server-form-top\">\n          <h5 id=\"join-server-header\">JOIN A SERVER</h5>\n          <p id=\"join-server-message\">Enter a server name below to join an existing server.</p>\n          <div className=\"create-server-form-input\">\n            <label id={this.props.errors[0] ? 'server-errors' : ''}>SERVER NAME\n              <span>{this.props.errors[0] ? `  -  ${this.props.errors[0]}` : ''}</span>\n            </label>\n            <input id=\"join-server-text-input\" type=\"text\" placeholder=\"Enter a server name\" onChange={this.update} ref={(input) => { this.nameInput = input; }} />\n          </div>\n        </div>\n        \n        <div className=\"create-server-form-bottom\" style={{marginTop: '105px'}}>\n          <button id=\"join-server-button\">Join</button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(JoinServerForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '../modal/tooltip';\n\nclass DmNotification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { classText: 'dm-notification'};\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.setState({classText: 'dm-notification right'}), 200);\n  }\n  \n  render() {\n    return (\n      <Tooltip component={\n        <Link to={`/channels/@me/${this.props.notification.channelId}`}\n          className={`home-icon ${this.state.classText}`}\n          id={`dm-notification-${this.props.notification.channelId}`}\n          style={{ backgroundImage: `url(${this.props.user.image_url})`, backgroundSize: '100%'}}\n          onKeyDown={(e) => e.preventDefault()}\n        >\n          <div className=\"dm-notification-badge\">{this.props.notification.count}</div>\n        </Link>\n      }\n        position=\"right center\"\n        text={this.props.user.username}\n      />\n    )\n  };\n};\n\nexport default DmNotification;","import * as APIUtil from '../util/server_api_utl';\n\nexport const RECEIVE_SERVERS = 'RECEIVE_SERVERS';\nexport const RECEIVE_USERS = 'RECEIVE_USERS';\nexport const RECEIVE_SERVER = 'RECEIVE_SERVER';\nexport const RECEIVE_SERVER_ERRORS = 'RECEIVE_SERVER_ERRORS';\nexport const REMOVE_SERVER_ERRORS = 'REMOVE_SERVER_ERRORS';\nexport const REMOVE_SERVER = 'REMOVE_SERVER';\n\n\nexport const receiveServers = servers => ({\n  type: RECEIVE_SERVERS,\n  servers\n});\n\nexport const receiveUsers = users => ({\n  type: RECEIVE_USERS,\n  users\n});\n\nexport const receiveServer = (server, userId) => ({\n  type: RECEIVE_SERVER,\n  server,\n  userId\n});\n\nexport const removeServer = (serverId, userId) => ({\n  type: REMOVE_SERVER,\n  serverId,\n  userId\n});\n\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SERVER_ERRORS,\n  errors\n});\n\nexport const removeServerErrors = () => ({\n  type: REMOVE_SERVER_ERRORS,\n});\n\nexport const fetchServers = () => dispatch => (\n  APIUtil.fetchServers().then(servers => (\n    dispatch(receiveServers(servers))\n  ))\n);\n\nexport const fetchMembers = (id) => dispatch => (\n  APIUtil.fetchMembers(id).then(({users, requests}) => {\n    return dispatch(receiveUsers(users));\n  })\n);\n\nexport const createServer = (formData) => dispatch => (\n  APIUtil.createServer(formData).then(server => (\n    dispatch(receiveServer(server, server.admin_id))\n  ), err => (\n    dispatch(receiveErrors(err.responseJSON))\n  ))\n);\n\nexport const deleteServer = (serverId, userId) => dispatch => (\n  APIUtil.deleteServer(serverId).then(() => (\n    dispatch(removeServer(serverId, userId))\n    )\n  )\n);\n\nexport const joinServer = (server, userId) => dispatch => (\n  APIUtil.joinServer(server).then(server => (\n    dispatch(receiveServer(server, userId))\n  ), err => (\n    dispatch(receiveErrors(err.responseJSON))\n  ))\n);\n","import Axios from 'axios';\n\nexport const createServer = formData => (\n  Axios({\n    method: 'POST',\n    url: 'localhost:1337/api/servers',\n    data: formData,\n    contentType: false,\n    processData: false\n  })\n);\n\nexport const fetchServer = id => (\n  Axios({\n    method: 'GET',\n    url: `localhost:1337/api/servers/${id}`,\n  })\n);\n\nexport const fetchMembers = id => (\n  Axios({\n    method: 'GET',\n    url: `localhost:1337/api/servers/${id}/members`,\n  })\n);\n\nexport const fetchServers = () => (\n  Axios({\n    method: 'GET',\n    url: 'localhost:1337/api/servers',\n  })\n);\n\nexport const joinServer = server => (\n  Axios({\n    method: 'POST',\n    url: `localhost:1337/api/servers/join`,\n    data: { server }\n  })\n);\n\nexport const deleteServer = id => (\n  Axios({\n    method: 'DELETE',\n    url: `localhost:1337/api/servers/${id}`,\n  })\n);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass SearchServerItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.joinServer({name: this.props.server.name}, this.props.currentUserId).then(this.handleRedirect);\n  }\n\n  handleRedirect(action) {\n    this.props.closeModal();\n    this.props.history.push(`/channels/${action.server.id}/${action.server.root_channel}`);\n  }\n\n\n  render() {\n    return (\n      <button type=\"button\" className=\"channel\" id=\"search-server-item\" onClick={this.handleSubmit}>\n        <div className=\"server-member-img\" style={this.props.server.icon_url ?\n          { backgroundImage: `url(${this.props.server.icon_url})`, backgroundSize: '100%', marginLeft: 0 } :\n          { backgroundSize: '100%', marginLeft: 0 }}></div>\n        <div className=\"channel-name\">{this.props.server.name}</div>\n      </button>\n    )\n  };\n};\n\nexport default withRouter(SearchServerItem);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { joinServer, fetchServers } from '../../../actions/server_actions';\nimport SearchServerItem from './search_server_item';\n\nclass SearchServersForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: '', servers: [] };\n    this.searchInput = React.createRef();\n    this.update = this.update.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchServers();\n    this.searchInput.current.focus();\n  }\n\n  update(e) {\n    const name = e.currentTarget.value;\n    let servers;\n\n    if (name) {\n      servers = this.props.servers.filter(server => {\n        return server.name.match(new RegExp(`^.*${name}.*$`, 'i'));\n      });\n    } else {\n      servers = [];\n    }\n\n    this.setState({ name, servers });\n  }\n\n  render() {\n    let servers;\n    if (this.state.servers.length === 0 && this.state.name) {\n      servers = <div className=\"server-search-empty\">{`No servers match \"${this.state.name}\"`}</div>;\n    } else if (this.state.servers.length === 0 && !this.state.name) {\n      servers = <div className=\"server-search-pic\"></div>;\n    } else {\n      servers = this.state.servers.map((server, idx) => {\n        return <SearchServerItem\n          server={server}\n          key={idx}\n          closeModal={this.props.closeModal}\n          joinServer={this.props.joinServer}\n          currentUserId={this.props.currentUserId}\n        />;\n      });\n    }\n\n    return (\n      <section className=\"create-channel-form\" onSubmit={this.handleSubmit}>\n        <header>\n          <h4 style={{ marginBottom: '6px' }}>Server Discovery</h4>\n          <input type=\"text\"\n            placeholder={`Try searching for a server like \"westeros\"`}\n            value={this.state.name}\n            onChange={this.update}\n            className='session-input'\n            ref={this.searchInput}\n            id=\"search-input\"\n            autoComplete=\"off\"\n          />\n        </header>\n        <main className=\"search-results\">\n          <ul>\n            {servers}\n          </ul>\n        </main>\n        <div className=\"create-channel-form-bottom\" id=\"search-bottom\">\n          <button type=\"button\" className=\"create-channel-cancel\" onClick={this.props.closeModal}>Cancel</button>\n        </div>\n      </section >\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  const currentUserId = state.session.id\n\n  // const currentUserServers = state.entities.users[currentUserId].servers;\n  // const servers = Object.values(state.entities.servers).filter(server => {\n  //   return !currentUserServers.includes(server.id);\n  // });\n\n  const servers = Object.values(state.entities.servers)\n\n  return {\n    servers,\n    currentUserId,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    joinServer: (server, userId) => dispatch(joinServer(server, userId)),\n    fetchServers: (server, userId) => dispatch(fetchServers(server, userId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchServersForm);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Server from '../server';\nimport Modal from 'react-modal';\nimport CreateServerForm from '../create_server_form';\nimport JoinServerForm from '../join_server_form';\nimport Tooltip from '../../modal/tooltip';\nimport DmNotification from '../dm_notification';\nimport SearchServersForm from '../search_servers_form';\n\nfunction Servers(props) {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     showModal: false,\n  //     showSearchModal: false,\n  //     content: ''\n  //   };\n\n  const [showModal, setShowModal] = useState(false);\n  const [showSearchModal, setShowSearchModal] = useState(false);\n  const [content, setContent] = useState('');\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleOpenSearchModal = this.handleOpenSearchModal.bind(this);\n    this.handleCloseSearchModal = this.handleCloseSearchModal.bind(this);\n\n\n  handleOpenModal = () => {\n    // this.setState({ showModal: true });\n    setShowModal(true);\n  }\n\n  handleCloseModal = () => {\n    setShowModal(true);\n    setTimeout(() => setContent(''), 150);\n    \n    props.removeServerErrors(); //fix\n    \n  }\n\n  handleOpenSearchModal = () => {\n    // this.setState({ showSearchModal: true });\n    setShowSearchModal(true);\n  }\n\n  handleCloseSearchModal = () => {\n    // this.setState({ showSearchModal: false });\n    setShowSearchModal(false);\n  }\n\n  updateContent = (type) => {\n    setContent(type);\n  }\n\n  const dmNotifications = props.dmNotifications.map((notification, idx) => {\n    return (\n      <DmNotification\n        key={idx}\n        notification={notification}\n        user={this.props.users[idx]}\n      />\n    );\n  })\n\n  const servers = this.props.servers.map((server, idx) => {\n    return <Server key={idx} server={server} />;\n  });\n\n  Modal.setAppElement('#root');\n  // let content;\n\n  if (content === \"create\") {\n      content = <CreateServerForm\n        createServer={props.createServer}\n        closeModal={handleCloseModal}\n        errors={this.props.errors} />;\n    } else if (content === \"join\") {\n      content = <JoinServerForm\n        joinServer={props.joinServer}\n        closeModal={handleCloseModal}\n        errors={props.errors} \n        currentUserId={props.currentUser.id}\n      />;\n    } else {\n      content = (\n        <div className=\"server-modal-content-wrapper\">\n          <div className=\"server-modal-content\">\n            <h3 className=\"create-server-header\">OH, ANOTHER SERVER HUH?</h3>\n            <div className=\"modal-create-join\">\n              <div className=\"modal-create-server\" onClick={() => this.updateContent('create')}>\n                <h4>CREATE</h4>\n                <p>Create a new server and invite your friends. It's free!</p>\n                <div></div>\n                <button className=\"modal-create-button\">Create a server</button>\n              </div>\n              <div className=\"modal-join-server\" onClick={() => this.updateContent('join')}>\n                <h4>JOIN</h4>\n                <p>Enter a server name and join your friends server.</p>\n                <div></div>\n                <button className=\"modal-join-button\">Join a server</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"or\">or</div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"side-bar\">\n        <Tooltip component={\n          <NavLink to='/channels/@me' className=\"home-icon\" activeClassName=\"serverSelected\">\n            <div className=\"server-active-icon\"></div>\n          </NavLink>\n        }\n          position=\"right center\"\n          text=\"Home\"\n        />\n        <div className=\"friends-online\">{`${this.props.onlineCount} Online`}</div>\n        {dmNotifications}\n        <div className=\"separator\"></div>\n        <div className=\"side-scroll-container\">\n          {servers}\n          <button className=\"create-server\"\n            type=\"button\"\n            onClick={this.handleOpenModal}\n          ><span>+</span></button>\n          <Tooltip component={\n            <button className=\"create-server\"\n              type=\"button\"\n              onClick={this.handleOpenSearchModal}\n            ><svg className=\"server-search\" width=\"24\" height=\"24\" viewBox=\"0 0 18 18\"><g fill=\"none\" fillRule=\"evenodd\"><path fill=\"currentColor\" d=\"M3.60091481,7.20297313 C3.60091481,5.20983419 5.20983419,3.60091481 7.20297313,3.60091481 C9.19611206,3.60091481 10.8050314,5.20983419 10.8050314,7.20297313 C10.8050314,9.19611206 9.19611206,10.8050314 7.20297313,10.8050314 C5.20983419,10.8050314 3.60091481,9.19611206 3.60091481,7.20297313 Z M12.0057176,10.8050314 L11.3733562,10.8050314 L11.1492281,10.5889079 C11.9336764,9.67638651 12.4059463,8.49170955 12.4059463,7.20297313 C12.4059463,4.32933105 10.0766152,2 7.20297313,2 C4.32933105,2 2,4.32933105 2,7.20297313 C2,10.0766152 4.32933105,12.4059463 7.20297313,12.4059463 C8.49170955,12.4059463 9.67638651,11.9336764 10.5889079,11.1492281 L10.8050314,11.3733562 L10.8050314,12.0057176 L14.8073185,16 L16,14.8073185 L12.2102538,11.0099776 L12.0057176,10.8050314 Z\"></path></g></svg></button>\n          }\n            position=\"right center\"\n            text=\"Server Discovery\"\n          />\n        </div>\n        <Modal\n          closeTimeoutMS={150}\n          isOpen={state.showModal}\n          onRequestClose={handleCloseModal}\n          style={{\n            overlay: {\n              backgroundColor: 'rgba(0, 0, 0, 0.85)',\n              zIndex: 99,\n            },\n            content: {\n              height: '420px',\n              width: '540px',\n              padding: 0,\n              borderRadius: '5px 5px 5px 5px',\n              margin: 'auto',\n              background: 'rgb(255, 255, 255)',\n              boxSizing: 'border-box',\n            }\n          }}\n        >\n          {content}\n        </Modal>\n        <Modal\n          isOpen={state.showSearchModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={handleCloseSearchModal}\n          closeTimeoutMS={150}\n          style={{\n            overlay: {\n              backgroundColor: 'rgba(0, 0, 0, 0.85)',\n              zIndex: 99,\n            },\n            content: {\n              height: '382px',\n              width: '440px',\n              padding: 0,\n              borderRadius: '5px',\n              margin: 'auto',\n              boxShadow: '0 0 0 1px rgba(32,34,37,.6), 0 2px 10px 0 rgba(0,0,0,.2)',\n              boxSizing: 'border-box',\n              display: 'flex',\n              flexDirection: 'column',\n              backgroundColor: '#36393f',\n              border: 'none'\n            }\n          }}\n        >\n          <SearchServersForm\n            closeModal={handleCloseSearchModal}\n          />\n        </Modal>\n      </div>\n    )\n  }\n\nexport default Servers;","import { connect } from 'react-redux';\nimport Servers from './servers';\nimport { fetchServers, createServer, joinServer } from '../../../../actions/server_actions';\nimport { removeServerErrors } from '../../../../actions/server_actions';\nimport { withRouter } from 'react-router-dom';\n\nconst mapStateToProps = state => {\n  let onlineCount = 0;\n  state.entities.friends.forEach(friendId => {\n    if (state.entities.users[friendId] && state.entities.users[friendId].online) {\n      onlineCount++;\n    }\n  });\n\n  const dmNotifications = Object.values(state.notifications.dm);\n  const users = dmNotifications.map(notification => {\n    return state.entities.users[notification.authorId];\n  });\n  const currentUser = state.entities.users[state.session.id];\n\n  const servers = currentUser.servers.map(serverId => {\n    return state.entities.servers[serverId] || {};\n  });\n\n  return {\n    servers,\n    errors: state.errors.server,\n    onlineCount,\n    dmNotifications,\n    users,\n    currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchServers: () => dispatch(fetchServers()),\n    createServer: (formData) => dispatch(createServer(formData)),\n    joinServer: (server, userId) => dispatch(joinServer(server, userId)),\n    removeServerErrors: () => dispatch(removeServerErrors()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Servers));\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport Tooltip from '../../modal/tooltip';\n\nclass Channel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { active: false };\n    \n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleMouseEnter() {\n    if (this.props.channel.name !== 'general' && this.props.currentUser.id === this.props.server.admin_id) {\n      this.setState({ active: true });\n    }\n  }\n\n  handleMouseLeave() {\n    if (this.props.channel.name !== 'general' && this.props.currentUser.id === this.props.server.admin_id) {\n      this.setState({ active: false });\n    }\n  }\n\n  handleDelete(e) {\n    e.preventDefault();\n    const that = this;\n    this.props.deleteChannel().then((action) => {\n      if (action.channelId == that.props.match.params.channelId) {\n        that.props.history.push(`/channels/${that.props.server.id}/${that.props.server.root_channel}`);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <NavLink to={`/channels/${this.props.server.id}/${this.props.channel.id}`}\n        className=\"channel\"\n        activeClassName=\"selected\"\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" className=\"colorDefaultText-oas-QM icon-sxakjD\">\n          <path className=\"foreground-2W-aJk\" fill=\"currentColor\" d=\"M2.27333333,12 L2.74666667,9.33333333 L0.08,9.33333333 L0.313333333,8 L2.98,8 L3.68666667,4 L1.02,4 L1.25333333,2.66666667 L3.92,2.66666667 L4.39333333,0 L5.72666667,0 L5.25333333,2.66666667 L9.25333333,2.66666667 L9.72666667,0 L11.06,0 L10.5866667,2.66666667 L13.2533333,2.66666667 L13.02,4 L10.3533333,4 L9.64666667,8 L12.3133333,8 L12.08,9.33333333 L9.41333333,9.33333333 L8.94,12 L7.60666667,12 L8.08,9.33333333 L4.08,9.33333333 L3.60666667,12 L2.27333333,12 L2.27333333,12 Z M5.02,4 L4.31333333,8 L8.31333333,8 L9.02,4 L5.02,4 L5.02,4 Z\"\n            transform=\"translate(1.333 2)\"></path>\n        </svg>\n        <div className=\"channel-name\">{this.props.channel.name}</div>\n        {this.state.active ?\n          (<Tooltip component={\n            <button className=\"delete-channel-button\" onClick={this.handleDelete}></button>\n          }\n            position=\"top right\"\n            text=\"Delete Channel\"\n          />) : null}\n      </NavLink >\n    )\n  };\n};\n\nexport default withRouter(Channel);","import React from 'react';\nimport merge from 'lodash/merge';\n\nclass CreateChannelForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: '' };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  componentDidMount() {\n    this.nameInput.focus();\n  }\n\n  update(e) {\n    this.setState({\n      name: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.createChannel(merge(this.state, {server_id: this.props.server.id})).then(this.props.closeModal);\n  }\n\n  render() {\n    return (\n      <form className=\"create-channel-form\" onSubmit={this.handleSubmit}>\n        <header>\n          <h4>{`CREATE ${this.props.text} CHANNEL`}</h4>\n          <p>in {this.props.server.name}</p>\n        </header>\n        <main>\n          <div className=\"session-error-wrapper\">\n            <h5 className={`email-label ${this.props.errors[0] ? 'session-error-label' : ''}`}>CHANNEL NAME</h5>\n            <span className=\"session-errors\">{this.props.errors[0] ? `- ${this.props.errors[0]}` : ''}</span>\n          </div>\n          <input type=\"text\"\n            value={this.state.name}\n            onChange={this.update}\n            className={this.props.errors[0] ? 'session-error' : 'session-input'}\n            ref={(input) => { this.nameInput = input; }}\n          />\n        </main>\n        <div className=\"create-channel-form-bottom\">\n          <button type=\"button\" className=\"create-channel-cancel\" onClick={this.props.closeModal}>Cancel</button>\n          <button id=\"session-submit\">Create Channel</button>\n        </div>\n      </form >\n    )\n  }\n}\n\nexport default CreateChannelForm;\n","import React from 'react';\nimport Tooltip from '../../modal/tooltip';\n\nconst JOIN_ROOM = \"JOIN_ROOM\";\nconst EXCHANGE = \"EXCHANGE\";\nconst REMOVE_USER = \"REMOVE_USER\";\n\nclass VoiceChannel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { active: false };\n    this.pcPeers = {};\n    this.remoteAudioContainer = React.createRef();\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleMouseEnter() {\n    if (this.props.channel.name !== 'General' && this.props.currentUserId === this.props.server.admin_id) {\n      this.setState({ active: true });\n    }\n  }\n\n  handleMouseLeave() {\n    if (this.props.channel.name !== 'General' && this.props.currentUserId === this.props.server.admin_id) {\n      this.setState({ active: false });\n    }\n  }\n\n  handleDelete(e) {\n    e.stopPropagation();\n    if (this.voiceSession) this.handleLeaveSession();\n    this.props.leaveVoiceChannel();\n    this.props.deleteVoiceChannel();\n  }\n\n  handleClick() {\n    this.props.selectVoiceChannel();\n  }\n\n  componentDidMount() {\n    if (this.props.select) {\n      navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(stream => {\n        this.localstream = stream;\n      }).then(() => this.handleJoinSession());\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selected && !this.props.selected) {\n      if (this.voiceSession) this.handleLeaveSession();\n    } else if (!prevProps.selected && this.props.selected) {\n      if (this.voiceSession) this.handleLeaveSession();\n\n      navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n        this.localstream = stream;\n      }).then(() => this.handleJoinSession());\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.voiceSession) this.handleLeaveSession();\n  }\n\n  handleJoinSession() {\n    const that = this;\n    this.voiceSession = App.cable.subscriptions.create(\n      { channel: \"VoiceChannel\", channelId: this.props.channel.id },\n      {\n        connected: () => {\n          this.voiceSession.broadcastData({\n            type: JOIN_ROOM,\n            from: this.props.currentUserId\n          });\n        },\n        received: data => {\n          if (data.from === this.props.currentUserId) return;\n          switch (data.type) {\n            case JOIN_ROOM:\n              return this.joinRoom(data);\n            case EXCHANGE:\n              if (data.to !== this.props.currentUserId) return;\n              return this.exchange(data);\n            case REMOVE_USER:\n              return this.removeUser(data);\n            default:\n              return;\n          }\n        },\n        broadcastData: function (data) { return this.perform(\"broadcast\", { channelId: that.props.channel.id, data }) }\n      }\n    );\n  }\n\n  handleLeaveSession() {\n    for (let user in this.pcPeers) {\n      this.pcPeers[user].close();\n    }\n    this.pcPeers = {};\n\n    this.voiceSession.unsubscribe();\n\n    this.localstream.getAudioTracks().forEach(function (track) {\n      track.stop();\n    });\n\n    this.voiceSession.broadcastData({\n      type: REMOVE_USER,\n      from: this.props.currentUserId\n    });\n  }\n\n  removeUser(data) {\n    let audio = document.getElementById(`remoteAudioContainer+${data.from}`);\n    if (audio) audio.remove();\n    delete this.pcPeers[data.from];\n  }\n\n  createPC(userId, isOffer) {\n    const ice = { iceServers: [{ urls: \"stun:stun1.l.google.com:19302\" }, { urls: \"stun:stun2.l.google.com:19302\" }] };\n    let pc = new RTCPeerConnection(ice);\n    this.pcPeers[userId] = pc;\n    this.localstream.getTracks().forEach(track => pc.addTrack(track, this.localstream));\n    if (isOffer) {\n      pc.createOffer().then(offer => {\n        pc.setLocalDescription(offer).then(() => {\n          this.voiceSession.broadcastData({\n            type: EXCHANGE,\n            from: this.props.currentUserId,\n            to: userId,\n            sdp: JSON.stringify(pc.localDescription)\n          });\n        });\n      });\n    }\n\n    pc.onicecandidate = event => {\n      if (event.candidate) {\n        this.voiceSession.broadcastData({\n          type: EXCHANGE,\n          from: this.props.currentUserId,\n          to: userId,\n          candidate: JSON.stringify(event.candidate)\n        });\n      }\n    };\n\n    pc.ontrack = event => {\n      const element = document.createElement(\"audio\");\n      element.id = `remoteAudioContainer+${userId}`;\n      element.autoplay = \"autoplay\";\n      element.srcObject = event.streams[0];\n      this.remoteAudioContainer.current.appendChild(element);\n    };\n\n    pc.oniceconnectionstatechange = event => {\n      if (pc.iceConnectionState == \"disconnected\") {\n        this.voiceSession.broadcastData({\n          type: REMOVE_USER,\n          from: userId\n        });\n      }\n    };\n\n    return pc;\n  }\n\n  exchange(data) {\n    let pc;\n    if (!this.pcPeers[data.from]) {\n      pc = this.createPC(data.from, false);\n    } else {\n      pc = this.pcPeers[data.from];\n    }\n\n    if (data.candidate) {\n      pc.addIceCandidate(new RTCIceCandidate(JSON.parse(data.candidate)));\n    }\n\n    if (data.sdp) {\n      const sdp = JSON.parse(data.sdp);\n      pc.setRemoteDescription(sdp).then(() => {\n        if (sdp.type === \"offer\") {\n          pc.createAnswer().then(answer => {\n            pc.setLocalDescription(answer).then(() => {\n              this.voiceSession.broadcastData({\n                type: EXCHANGE,\n                from: this.props.currentUserId,\n                to: data.from,\n                sdp: JSON.stringify(pc.localDescription)\n              });\n            });\n          });\n        }\n      });\n    }\n  }\n\n  logError(error) {\n    console.warn(error);\n  }\n\n  joinRoom(data) {\n    this.createPC(data.from, true);\n  }\n\n  render() {\n    return (\n      <div\n        className={this.props.selected ? \"channel voice-selected\" : \"channel\"}\n        onClick={this.handleClick} ref={this.remoteAudioContainer}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M9.33333333,2 L9.33333333,3.37333333 C11.26,3.94666667 12.6666667,5.73333333 12.6666667,7.84666667 C12.6666667,9.96 11.26,11.74 9.33333333,12.3133333 L9.33333333,13.6933333 C12,13.0866667 14,10.7 14,7.84666667 C14,4.99333333 12,2.60666667 9.33333333,2 L9.33333333,2 Z M11,7.84666667 C11,6.66666667 10.3333333,5.65333333 9.33333333,5.16 L9.33333333,10.5133333 C10.3333333,10.04 11,9.02 11,7.84666667 L11,7.84666667 Z M2,5.84666667 L2,9.84666667 L4.66666667,9.84666667 L8,13.18 L8,2.51333333 L4.66666667,5.84666667 L2,5.84666667 L2,5.84666667 Z\"></path></svg>\n        <div className=\"channel-name\">{this.props.channel.name}</div>\n        {this.state.active ?\n          (<Tooltip component={\n            <button className=\"delete-channel-button\" onClick={this.handleDelete}></button>\n          }\n            position=\"top center\"\n            text=\"Delete Channel\"\n          />) : null}\n      </div>\n    )\n  };\n};\n\nexport default VoiceChannel;","import React from 'react';\nimport Modal from 'react-modal';\nimport CreateChannelForm from '../create_channel_form';\nimport VoiceChannel from './voice_channel';\n\nclass VoiceChannels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showModal: false, voiceChannelId: null };\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.selectVoiceChannel = this.selectVoiceChannel.bind(this);\n    this.leaveVoiceChannel = this.leaveVoiceChannel.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchVoiceChannels(this.props.match.params.serverId);\n  }\n\n  componentDidUpdate(prevProps) {\n    const serverId = this.props.match.params.serverId;\n    if (prevProps.server.id && prevProps.server.id != serverId) {\n      this.props.fetchVoiceChannels(serverId);\n      if (this.state.voiceChannelId) this.leaveVoiceChannel();\n    }\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n    this.props.removeChannelErrors();\n  }\n\n  selectVoiceChannel(voiceChannelId) {\n    this.setState({ voiceChannelId });\n  }\n\n  leaveVoiceChannel() {\n    this.setState({ voiceChannelId: null });\n  }\n\n  render() {\n    const that = this;\n    const voiceChannels = this.props.voiceChannels.map((channel, idx) => {\n      if (channel.server_id == that.props.match.params.serverId) {\n        return <VoiceChannel\n          server={that.props.server}\n          channel={channel}\n          key={idx}\n          currentUserId={that.props.currentUser.id}\n          selectVoiceChannel={() => this.selectVoiceChannel(channel.id)}\n          selected={this.state.voiceChannelId === channel.id}\n          deleteVoiceChannel={() => that.props.deleteVoiceChannel(channel.id)}\n          leaveVoiceChannel={that.leaveVoiceChannel}\n        />;\n      } else {\n        return null;\n      }\n    });\n\n    return (\n      <>\n        <div className=\"text-channels-label\">\n          <div>\n            <button className=\"text-channels-button\" onClick={this.handleOpenModal}>+</button>\n            <h3 id=\"text-channels\">Voice Channels</h3>\n          </div>\n        </div>\n        {voiceChannels}\n        {this.state.voiceChannelId ? (\n          <div className=\"voice-connected-popup\">\n            <h4>Voice Connected</h4>\n            <button onClick={this.leaveVoiceChannel} className=\"leave-voice-channel-button\"></button>\n          </div>\n        ) : null}\n        <Modal\n          isOpen={this.state.showModal}\n          contentLabel=\"onRequestClose Example\"\n          closeTimeoutMS={150}\n          onRequestClose={this.handleCloseModal}\n          style={{\n            overlay: {\n              backgroundColor: 'rgba(0, 0, 0, 0.85)',\n              zIndex: 99,\n            },\n            content: {\n              height: '382px',\n              width: '440px',\n              padding: 0,\n              borderRadius: '5px',\n              margin: 'auto',\n              boxShadow: '0 0 0 1px rgba(32,34,37,.6), 0 2px 10px 0 rgba(0,0,0,.2)',\n              boxSizing: 'border-box',\n              display: 'flex',\n              flexDirection: 'column',\n              backgroundColor: '#36393f',\n              border: 'none'\n            }\n          }}\n        >\n          <CreateChannelForm\n            server={this.props.server}\n            createChannel={this.props.createVoiceChannel}\n            closeModal={this.handleCloseModal}\n            errors={this.props.errors}\n            text=\"VOICE\"\n          />\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default VoiceChannels;\n","import * as APIUtil from '../util/channel_api_util';\nimport { receiveUsers, removeServer } from './server_actions';\n\nexport const RECEIVE_CHANNELS = 'RECEIVE_CHANNELS';\nexport const RECEIVE_CHANNEL = 'RECEIVE_CHANNEL';\nexport const REMOVE_CHANNEL = 'REMOVE_CHANNEL';\nexport const RECEIVE_CHANNEL_ERRORS = 'RECEIVE_CHANNEL_ERRORS';\nexport const REMOVE_CHANNEL_ERRORS = 'REMOVE_CHANNEL_ERRORS';\n\n\nexport const receiveChannels = channels => ({\n  type: RECEIVE_CHANNELS,\n  channels\n});\n\nexport const receiveChannel = channel => ({\n  type: RECEIVE_CHANNEL,\n  channel\n});\n\nexport const receiveDmChannel = channel => ({\n  type: RECEIVE_CHANNEL,\n  channel\n});\n\nexport const removeChannel = channelId => ({\n  type: REMOVE_CHANNEL,\n  channelId\n});\n\nexport const receiveErrors = errors => ({\n  type: RECEIVE_CHANNEL_ERRORS,\n  errors\n});\n\nexport const removeChannelErrors = () => ({\n  type: REMOVE_CHANNEL_ERRORS,\n});\n\n\nexport const fetchChannels = (serverId, userId) => dispatch => (\n  APIUtil.fetchChannels(serverId).then(channels => (\n    dispatch(receiveChannels(channels))\n  ), () => (\n      dispatch(removeServer(serverId, userId))\n  ))\n);\n\nexport const deleteChannel = (id) => dispatch => (\n  APIUtil.deleteChannel(id).then(() => (\n    dispatch(removeChannel(id))\n  ))\n);\n\nexport const deleteDmChannel = (id) => dispatch => (\n  APIUtil.deleteDmChannel(id).then((membership) => (\n    dispatch(removeChannel(membership.channel_id))\n  ))\n);\n\nexport const fetchDmChannels = () => dispatch => (\n  APIUtil.fetchDmChannels().then(({channels, users}) => {\n    dispatch(receiveUsers(users));\n    return dispatch(receiveChannels(channels));\n  })\n);\n\nexport const createChannel = (channel) => dispatch => (\n  APIUtil.createChannel(channel).then(channel => (\n    dispatch(receiveChannel(channel))\n  ), err => (\n    dispatch(receiveErrors(err.responseJSON))\n  ))\n);\n\nexport const createDmChannel = (userId) => dispatch => (\n  APIUtil.createDmChannel(userId).then(channel => (\n    dispatch(receiveChannel(channel))\n  ))\n);\n\n","import Axios from 'axios';\n\nexport const createChannel = channel => (\n  Axios({\n    method: 'POST',\n    url: 'localhost:1337/api/channels',\n    data: { channel }\n  })\n);\n\nexport const createDmChannel = user_id => (\n  Axios({\n    method: 'POST',\n    url: 'localhost:1337/api/dm_channel_memberships',\n    data: {dm_channel: { user_id }}\n  })\n);\n\nexport const fetchChannel = id => (\n  Axios({\n    method: 'GET',\n    url: `localhost:1337/api/channels/${id}`,\n  })\n);\n\nexport const deleteChannel = id => (\n  Axios({\n    method: 'DELETE',\n    url: `localhost:1337/api/channels/${id}`,\n  })\n);\n\nexport const deleteDmChannel = id => (\n  Axios({\n    method: 'DELETE',\n    url: `localhost:1337/api/dm_channel_memberships/${id}`,\n  })\n);\n\nexport const fetchChannels = (server_id) => (\n  Axios({\n    method: 'GET',\n    url: 'localhost:1337/api/channels',\n    data: { channel: {server_id} }\n  })\n);\n\nexport const fetchDmChannels = () => (\n  Axios({\n    method: 'GET',\n    url: 'localhost:1337/api/dm_channel_memberships',\n  })\n);\n\n","import * as APIUtil from '../util/voice_channel_api_util';\nimport { receiveErrors } from './channel_actions';\n\nexport const RECEIVE_VOICE_CHANNELS = 'RECEIVE_VOICE_CHANNELS';\nexport const RECEIVE_VOICE_CHANNEL = 'RECEIVE_VOICE_CHANNEL';\nexport const REMOVE_VOICE_CHANNEL = 'REMOVE_VOICE_CHANNEL';\nexport const RECEIVE_VOICE_CHANNEL_ERRORS = 'RECEIVE_VOICE_CHANNEL_ERRORS';\nexport const REMOVE_VOICE_CHANNEL_ERRORS = 'REMOVE_VOICE_CHANNEL_ERRORS';\n\n\nexport const receiveVoiceChannels = voiceChannels => ({\n  type: RECEIVE_VOICE_CHANNELS,\n  voiceChannels\n});\n\nexport const receiveVoiceChannel = voiceChannel => ({\n  type: RECEIVE_VOICE_CHANNEL,\n  voiceChannel\n});\n\nexport const removeVoiceChannel = voiceChannelId => ({\n  type: REMOVE_VOICE_CHANNEL,\n  voiceChannelId\n});\n\n\nexport const fetchVoiceChannels = (serverId) => dispatch => (\n  APIUtil.fetchVoiceChannels(serverId).then(voiceChannels => (\n    dispatch(receiveVoiceChannels(voiceChannels))\n  ))\n);\n\nexport const deleteVoiceChannel = (id) => dispatch => (\n  APIUtil.deleteVoiceChannel(id).then(() => (\n    dispatch(removeVoiceChannel(id))\n  ))\n);\n\nexport const createVoiceChannel = (voiceChannel) => dispatch => (\n  APIUtil.createVoiceChannel(voiceChannel).then(voiceChannel => (\n    dispatch(receiveVoiceChannel(voiceChannel))\n  ), err => (\n    dispatch(receiveErrors(err.responseJSON))\n  ))\n);","import Axios from 'axios';\n\nexport const createVoiceChannel = audio_channel => (\n  Axios({\n    method: 'POST',\n    url: 'localhost:1337/api/audio_channels',\n    data: { audio_channel }\n  })\n);\n\nexport const fetchVoiceChannel = id => (\n  Axios({\n    method: 'GET',\n    url: `localhost:1337/api/audio_channels/${id}`,\n  })\n);\n\nexport const deleteVoiceChannel = id => (\n  Axios({\n    method: 'DELETE',\n    url: `localhost:1337/api/audio_channels/${id}`,\n  })\n);\n\nexport const fetchVoiceChannels = (server_id) => (\n  Axios({\n    method: 'GET',\n    url: 'localhost:1337/api/audio_channels',\n    data: { audio_channel: { server_id } }\n  })\n);\n","import { connect } from 'react-redux';\nimport VoiceChannels from './voice_channels';\nimport { withRouter } from 'react-router-dom';\nimport { fetchVoiceChannels, createVoiceChannel, deleteVoiceChannel } from '../../../../actions/voice_channel_actions';\nimport { removeChannelErrors } from '../../../../actions/channel_actions';\n\nconst mapStateToProps = (state, ownProps) => {\n  const serverId = ownProps.match.params.serverId;\n  const voiceChannels = Object.values(state.entities.voiceChannels).filter(channel => channel.server_id == serverId);\n\n  return {\n    currentUser: state.entities.users[state.session.id],\n    server: state.entities.servers[serverId] || {},\n    voiceChannels,\n    errors: state.errors.channel,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchVoiceChannels: serverId => dispatch(fetchVoiceChannels(serverId)),\n    createVoiceChannel: voiceChannel => dispatch(createVoiceChannel(voiceChannel)),\n    removeChannelErrors: () => dispatch(removeChannelErrors()),\n    deleteVoiceChannel: (id) => dispatch(deleteVoiceChannel(id)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(VoiceChannels));","import React from 'react';\n\nclass EditUserForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.currentUser.username,\n      email: this.props.currentUser.email,\n      avatarFile: null,\n      avatarUrl: null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFile = this.handleFile.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleFile(e) {\n    const file = e.currentTarget.files[0];\n    const fileReader = new FileReader();\n    fileReader.onloadend = () => {\n      this.setState({ avatarFile: file, avatarUrl: fileReader.result });\n    };\n\n    if (file) {\n      fileReader.readAsDataURL(file);\n    }\n  }\n\n  handleRemove(e) {\n    this.setState({ avatarFile: null, avatarUrl: null });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('user[username]', this.state.username);\n    formData.append('user[email]', this.state.email);\n    formData.append('user[id]', this.props.currentUser.id);\n\n    if (this.state.avatarFile) {\n      formData.append('user[avatar]', this.state.avatarFile);\n    }\n\n    this.props.editUser(formData).then(this.props.closeModal);\n  }\n\n  render() {\n    const emailError = this.props.errors.find((el) => el.includes('Email') || el.includes('demo'));\n    const usernameError = this.props.errors.find((el) => el.includes('Username') || el.includes('demo'));\n    const { avatarUrl, username, email } = this.state;\n\n    return (\n      <form className=\"edit-user-form\" onSubmit={this.handleSubmit}>\n        <div className=\"edit-user-form-top\">\n          <div className=\"avatar-container\">\n            <div\n              className=\"avatar-wrapper\"\n              style={{ backgroundImage: `url(${avatarUrl ? avatarUrl : this.props.currentUser.image_url})` }}\n            >\n              <p>{'CHANGE \\n AVATAR'}</p>\n              <input type=\"file\" onChange={this.handleFile} onKeyDown={(e) => e.preventDefault()} multipleaccept=\".jpg,.jpeg,.png,.gif\" />\n              <div className=\"add-file-icon\"></div>\n            </div>\n            {avatarUrl ? <button\n              type=\"button\"\n              className=\"remove-avatar-button\"\n              onClick={this.handleRemove}\n              onKeyDown={(e) => e.preventDefault()}\n            >REMOVE</button> : null}\n          </div>\n          <div className=\"edit-user-username-email\">\n            <div className=\"email-container\">\n              <div className=\"session-error-wrapper\">\n                <h5 className={`email-label ${usernameError ? 'session-error-label' : ''}`}>USERNAME</h5>\n                <span className=\"session-errors\">{usernameError ? `-  ${usernameError}` : ''}</span>\n              </div>\n              <input type=\"text\"\n                value={username}\n                onChange={this.update('username')}\n                className={usernameError ? 'session-error' : 'session-input'}\n              />\n            </div>\n            <div className=\"email-container\">\n              <div className=\"session-error-wrapper\">\n                <h5 className={`email-label ${emailError ? 'session-error-label' : ''}`}>EMAIL</h5>\n                <span className=\"session-errors\">{emailError ? `-  ${emailError}` : ''}</span>\n              </div>\n              <input type=\"text\"\n                value={email}\n                onChange={this.update('email')}\n                className={emailError ? 'session-error' : 'session-input'}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"edit-user-form-bottom\">\n          <div className=\"edit-user-button-container\">\n            <button\n              type=\"button\"\n              className=\"create-channel-cancel\"\n              onClick={this.props.closeModal}\n              style={{ height: 'auto' }}\n            >Cancel</button>\n            <button className=\"edit-user-button\">Save</button>\n          </div>\n        </div>\n      </form >\n    )\n  }\n}\n\nexport default EditUserForm;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport Tooltip from '../../modal/tooltip';\nimport EditUserForm from '../edit_user_form';\n\nclass UserBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showUserModal: false };\n    this.handleOpenUserModal = this.handleOpenUserModal.bind(this);\n    this.handleCloseUserModal = this.handleCloseUserModal.bind(this);\n  }\n\n  handleOpenUserModal() {\n    this.setState({ showUserModal: true });\n  }\n\n  handleCloseUserModal() {\n    this.setState({ showUserModal: false });\n    this.props.removeErrors();\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"user-actions\">\n          <div className=\"icon-name-wrapper\">\n            <Tooltip component={\n              <div className=\"user-icon\" style={{ backgroundImage: `url(${this.props.currentUser.image_url})` }} onClick={this.handleOpenUserModal}>\n                <div\n                  className=\"server-member-status-indicator\"\n                  style={this.props.currentUser.online ? { backgroundColor: '#43b581' } : { backgroundColor: '#747f8d' }}\n                ></div>\n              </div>\n            }\n              position=\"top center\"\n              text=\"Update Profile\"\n            />\n            <div className=\"actions-username\">{this.props.currentUser.username}</div>\n          </div>\n          <Tooltip component={\n            <button className=\"gear\" onClick={() => this.props.logout()}>\n              <i className=\"fas fa-sign-out-alt\"></i>\n            </button>\n          }\n            position=\"top center\"\n            text=\"Logout\"\n          />\n        </div>\n        <Modal\n          isOpen={this.state.showUserModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleCloseUserModal}\n          closeTimeoutMS={150}\n          style={{\n            overlay: {\n              backgroundColor: 'rgba(0, 0, 0, 0.7)',\n              zIndex: 99,\n            },\n            content: {\n              height: '271px',\n              width: '500px',\n              padding: 0,\n              borderRadius: '5px',\n              margin: 'auto',\n              boxShadow: '0 0 0 1px rgba(32,34,37,.6), 0 2px 10px 0 rgba(0,0,0,.2)',\n              boxSizing: 'border-box',\n              display: 'flex',\n              flexDirection: 'column',\n              backgroundColor: '#37393f',\n              border: 'none',\n            }\n          }}\n        >\n          <EditUserForm\n            closeModal={this.handleCloseUserModal}\n            errors={this.props.errors}\n            currentUser={this.props.currentUser}\n            editUser={this.props.editUser}\n          />\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default UserBar;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { logout, editUser, removeErrors } from '../../../../actions/session_actions';\nimport UserBar from './user_bar';\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.entities.users[state.session.id],\n    errors: state.errors.session,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(logout()),\n    editUser: formData => dispatch(editUser(formData)),\n    removeErrors: () => dispatch(removeErrors()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UserBar));","import React from 'react';\nimport Channel from './channel';\nimport Modal from 'react-modal';\nimport CreateChannelForm from '../create_channel_form';\nimport Tooltip from '../../modal/tooltip';\nimport VoiceChannels from '../voice_channels/voice_channels_container';\nimport UserBar from '../user_bar/user_bar_container';\n\nclass Channels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showModal: false, showUserModal: false, active: false };\n    \n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.removeServer = this.removeServer.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n  }\n\n  handleMouseEnter() {\n    this.setState({ active: true });\n  }\n\n  handleMouseLeave() {\n    this.setState({ active: false });\n  }\n\n  componentDidMount() {\n    const serverId = this.props.match.params.serverId;\n    if (serverId) {\n      this.props.fetchChannels(parseInt(serverId), this.props.currentUser.id).then(() => {}, () => (\n        this.props.history.push('/channels/@me')\n      ));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const serverId = this.props.match.params.serverId;\n    if (prevProps.server.id && prevProps.server.id != serverId) {\n      this.props.fetchChannels(parseInt(serverId), this.props.currentUser.id).then(() => {}, () => (\n        this.props.history.push('/channels/@me')\n      ));\n    }\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n    this.props.removeChannelErrors();\n  }\n\n  removeServer() {\n    this.props.deleteServer(this.props.server.id, this.props.currentUser.id).then(() => (\n      this.props.history.push('/channels/@me')\n    ));\n  }\n\n  render() {\n    const that = this;\n    const channels = this.props.channels.map((channel, idx) => {\n      return <Channel\n        server={that.props.server}\n        channel={channel}\n        key={idx}\n        currentUser={that.props.currentUser}\n        deleteChannel={() => that.props.deleteChannel(channel.id)}\n      />;\n    });\n\n    return (\n      <div className=\"right-main\">\n        <div className=\"channels\">\n          <div\n            className=\"channel-header\"\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n          >\n            <span className=\"server-name\">{this.props.server.name}</span>\n            {this.state.active ?\n              (<Tooltip component={\n                <button className=\"delete-channel-button\" onClick={this.removeServer}></button>\n              }\n                position=\"bottom right\"\n                text={this.props.server.admin_id === this.props.currentUser.id ? 'Delete Server' : 'Unsubscribe'}\n              />) : null}\n          </div>\n          <div className=\"channel-scroll-wrapper\">\n            <div className=\"channel-overflow-container\">\n              <div className=\"channel-list\">\n                <div className=\"text-channels-label\">\n                  <div>\n                    <button className=\"text-channels-button\" onClick={this.handleOpenModal}>+</button>\n                    <h3 id=\"text-channels\">Text Channels</h3>\n                  </div>\n                </div>\n                {channels}\n                <VoiceChannels />\n              </div>\n            </div>\n          </div>\n          <UserBar />\n        </div>\n        <Modal\n          isOpen={this.state.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleCloseModal}\n          closeTimeoutMS={150}\n          style={{\n            overlay: {\n              backgroundColor: 'rgba(0, 0, 0, 0.85)',\n              zIndex: 99,\n            },\n            content: {\n              height: '382px',\n              width: '440px',\n              padding: 0,\n              borderRadius: '5px',\n              margin: 'auto',\n              boxShadow: '0 0 0 1px rgba(32,34,37,.6), 0 2px 10px 0 rgba(0,0,0,.2)',\n              boxSizing: 'border-box',\n              display: 'flex',\n              flexDirection: 'column',\n              backgroundColor: '#36393f',\n              border: 'none'\n            }\n          }}\n        >\n          <CreateChannelForm\n            server={this.props.server}\n            createChannel={this.props.createChannel}\n            closeModal={this.handleCloseModal}\n            errors={this.props.errors}\n            text=\"TEXT\"\n          />\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default Channels;\n","import { connect } from 'react-redux';\nimport Channels from './channels';\nimport { fetchChannels, createChannel, removeChannelErrors, deleteChannel } from '../../../../actions/channel_actions';\nimport { withRouter } from 'react-router-dom';\nimport { deleteServer } from '../../../../actions/server_actions';\n\nconst mapStateToProps = (state, ownProps) => {\n  const serverId = ownProps.match.params.serverId;\n  const channels = Object.values(state.entities.channels).filter(channel => channel.server_id == serverId);\n  \n  return {\n    currentUser: state.entities.users[state.session.id],\n    server: state.entities.servers[serverId] || {},\n    channels,\n    errors: state.errors.channel,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchChannels: (serverId, userId) => dispatch(fetchChannels(serverId, userId)),\n    createChannel: channel => dispatch(createChannel(channel)),\n    removeChannelErrors: () => dispatch(removeChannelErrors()),\n    deleteServer: (serverId, userId) => dispatch(deleteServer(serverId, userId)),\n    deleteChannel: (id) => dispatch(deleteChannel(id)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Channels));\n","import React from 'react';\nimport Tooltip from '../../modal/tooltip';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"chat-header\">\n        <div style={{ display: 'flex', paddingBottom: '2px' }}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" color=\"#72767d\" className=\"hash\">\n            <path className=\"foreground-2W-aJk\" fill=\"currentColor\" d=\"M2.27333333,12 L2.74666667,9.33333333 L0.08,9.33333333 L0.313333333,8 L2.98,8 L3.68666667,4 L1.02,4 L1.25333333,2.66666667 L3.92,2.66666667 L4.39333333,0 L5.72666667,0 L5.25333333,2.66666667 L9.25333333,2.66666667 L9.72666667,0 L11.06,0 L10.5866667,2.66666667 L13.2533333,2.66666667 L13.02,4 L10.3533333,4 L9.64666667,8 L12.3133333,8 L12.08,9.33333333 L9.41333333,9.33333333 L8.94,12 L7.60666667,12 L8.08,9.33333333 L4.08,9.33333333 L3.60666667,12 L2.27333333,12 L2.27333333,12 Z M5.02,4 L4.31333333,8 L8.31333333,8 L9.02,4 L5.02,4 L5.02,4 Z\"\n              transform=\"translate(3 4)\"></path>\n          </svg>\n          <span className=\"username\">{this.props.channel.name}</span>\n        </div>\n        <Tooltip component={\n          <span tabIndex=\"0\" className=\"hide-members\" role=\"button\" onClick={this.props.toggleShowMembers}><svg\n            width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <g fill=\"none\" fillRule=\"evenodd\">\n              <polygon points=\"0 0 24 0 24 24 0 24\"></polygon>\n              <path className=\"iconForeground-3y9f0B\" fill=\"currentColor\" d=\"M19 19L23 19 23 16.5C23 14.17 18.33 13 16 13 15.71 13 15.38 13.02 15.03 13.05 15.2979181 13.2440097 15.5471657 13.4534892 15.7720754 13.6791778 17.5922944 14.6769857 19 16.1183086 19 18L19 19zM14.3335577 10.4967128C14.8098529 10.8147627 15.3828086 11 16 11 17.66 11 18.99 9.66 18.99 8 18.99 6.34 17.66 5 16 5 15.3827845 5 14.8098082 5.18525173 14.3335019 5.5033244 14.7574619 6.23791814 15 7.09053797 15 8.00006693 15 8.90955601 14.7574832 9.76214095 14.3335577 10.4967128zM9 12C6.79 12 5 10.21 5 8 5 5.79 6.79 4 9 4 11.21 4 13 5.79 13 8 13 10.21 11.21 12 9 12zM9 14C11.67 14 17 15.34 17 18L17 20 1 20 1 18C1 15.34 6.33 14 9 14z\"></path>\n            </g>\n          </svg></span>\n        }\n          position=\"bottom right\"\n          text=\"Member List\"\n        />\n      </header >\n    )\n  }\n}\n\nexport default Header;\n","import { connect } from 'react-redux';\nimport Header from './header';\nimport { withRouter } from 'react-router-dom';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    channel: state.entities.channels[ownProps.match.params.channelId] || {},\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Header));\n","import React from \"react\";\nimport { merge } from 'lodash';\nimport { withRouter } from 'react-router-dom';\n\nclass MessageForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      body: \"\",\n      author_id: props.user.id,\n    };\n\n    this.messageInput = React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  update(e) {\n    this.setState({ body: e.currentTarget.value });\n  }\n\n  componentDidMount() {\n    this.messageInput.current.focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const channelId = this.props.match.params.channelId;\n\n    if (prevProps.channel && prevProps.channel.id !== channelId) {\n      this.messageInput.current.focus();\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.subscription.speak({ message: merge({ channel_id: this.props.channelId }, this.state) });\n    this.setState({ body: \"\" });\n  }\n\n  render() {\n    let placeholder = '';\n\n    if (this.props.channel.name && this.props.match.params.serverId) {\n      placeholder = `Message #${this.props.channel.name}`;\n    } else if (this.props.channel.name) {\n      const nameArr = this.props.channel.name.split('-');\n      let userId;\n\n      if (nameArr[0] == this.props.user.id) {\n        userId = nameArr[1];\n      } else {\n        userId = nameArr[0];\n      }\n\n      placeholder = `Message @${this.props.users[userId] ? this.props.users[userId].username : null}`;\n    }\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"message-form\">\n        <div className=\"message-form-container\">\n          <input\n            type=\"text\"\n            placeholder={placeholder}\n            className=\"text-area\"\n            value={this.state.body}\n            onChange={this.update}\n            ref={this.messageInput}\n          ></input>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(MessageForm);","import * as APIUtil from '../util/friends_api_util';\nimport { receiveUsers } from './server_actions';\n\nexport const RECEIVE_REQUESTS = 'RECEIVE_REQUESTS';\nexport const RECEIVE_REQUEST = 'RECEIVE_REQUEST';\nexport const REMOVE_REQUEST = 'REMOVE_REQUEST';\nexport const REMOVE_FRIEND = 'REMOVE_FRIEND';\nexport const RECEIVE_FRIENDS = 'RECEIVE_FRIENDS';\nexport const RECEIVE_FRIEND = 'RECEIVE_FRIEND';\n\n\nexport const receiveFriendRequests = friendRequests => ({\n  type: RECEIVE_REQUESTS,\n  friendRequests\n});\n\nexport const receiveFriends = friendData => ({\n  type: RECEIVE_FRIENDS,\n  friendData\n});\n\nexport const receiveFriend = friendId => ({\n  type: RECEIVE_FRIEND,\n  friend: [friendId]\n});\n\nexport const receiveFriendRequest = friendRequest => ({\n  type: RECEIVE_REQUEST,\n  friendRequest\n});\n\nexport const removeFriendRequest = requestId => ({\n  type: REMOVE_REQUEST,\n  requestId\n});\n\nexport const removeFriend = friendId => ({\n  type: REMOVE_FRIEND,\n  friendId\n});\n\n\nexport const fetchFriendRequests = () => dispatch => (\n  APIUtil.fetchFriendRequests().then(({ requests, users }) => {\n    dispatch(receiveUsers(users));\n    return dispatch(receiveFriendRequests(requests));\n  })\n);\n\nexport const fetchFriends = () => dispatch => (\n  APIUtil.fetchFriends().then(friends => (\n    dispatch(receiveFriends(friends))\n  ))\n);\n\nexport const createFriendRequest = (friendRequest) => dispatch => (\n  APIUtil.createFriendRequest(friendRequest).then(request => (\n    dispatch(receiveFriendRequest(request))\n  ))\n);\n\nexport const acceptFriendRequest = (friendRequest) => dispatch => (\n  APIUtil.acceptFriendRequest(friendRequest).then(() => {\n    dispatch(removeFriendRequest(friendRequest.id));\n    return dispatch(receiveFriend(friendRequest.user_id));\n  })\n);\n\nexport const deleteFriendRequest = (friendRequest) => dispatch => (\n  APIUtil.deleteFriendRequest(friendRequest).then(() => (\n    dispatch(removeFriendRequest(friendRequest.id))\n  ))\n);\n\nexport const deleteFriend = (id) => dispatch => (\n  APIUtil.deleteFriend(id).then(() => (\n    dispatch(removeFriend(id))\n  ))\n);","import Axios from \"axios\";\n\nexport const createFriendRequest = friend_request => (\n  Axios({\n    method: 'POST',\n    url: 'localhost:1337/api/v1/friend_requests',\n    data: { friend_request }\n  })\n);\n\nexport const acceptFriendRequest = friend_request => (\n  Axios({\n    method: 'PATCH',\n    url: `localhost:1337/api/v1/friend_requests/${friend_request.id}`,\n  })\n);\n\nexport const deleteFriendRequest = friend_request => (\n  Axios({\n    method: 'DELETE',\n    url: `localhost:1337/api/v1/friend_requests/${friend_request.id}`,\n  })\n);\n\nexport const fetchFriendRequests = () => (\n  Axios({\n    method: 'GET',\n    url: 'localhost:1337/api/v1/friend_requests',\n  })\n);\n\nexport const deleteFriend = id => (\n  Axios({\n    method: 'DELETE',\n    url: `localhost:1337/api/v1/friends/${id}`,\n  })\n);\n\nexport const fetchFriends = () => (\n  Axios({\n    method: 'GET',\n    url: 'localhost:1337/api/v1/friends',\n  })\n);","import React from 'react';\nimport Popup from 'reactjs-popup';\n\nclass UserPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.addFriend = this.addFriend.bind(this);\n  }\n\n  handleClick() {\n    this.props.createDmChannel(this.props.user.id).then((action) => this.props.history.push(`/channels/@me/${action.channel.id}`));\n  }\n\n  addFriend() {\n    this.props.createFriendRequest({ friend_id: this.props.user.id });\n  }\n\n  render() {\n    const friendRequestsArray = this.props.friendRequests.map((request) => {\n      if (request.user_id === this.props.currentUserId) {\n        return request.friend_id;\n      } else {\n        return request.user_id;\n      }\n    });\n\n    const showFriendButtonArray = friendRequestsArray.concat(this.props.friends);\n    showFriendButtonArray.push(this.props.currentUserId);\n\n    const showFriendButton = !showFriendButtonArray.includes(this.props.user.id);\n\n    let offsetY = this.props.offsetY;\n    if (offsetY === -90) {\n      if (!showFriendButton) offsetY += 14;\n      if (this.props.currentUserId === this.props.user.id) offsetY += 14;\n    } else if (offsetY === 60) {\n      if (!showFriendButton) offsetY -= 16;\n      if (this.props.currentUserId === this.props.user.id) offsetY -= 16;\n    } else {\n      if (!showFriendButton) offsetY -= 17;\n      if (this.props.currentUserId === this.props.user.id) offsetY -= 17;\n    }\n    \n    return (\n      <Popup trigger={this.props.component}\n        arrow={false}\n        position={this.props.position}\n        closeOnDocumentClick\n        onOpen={this.props.onOpen}\n        on=\"click\"\n        offsetX={this.props.offsetX || 0}\n        offsetY={offsetY || 0}\n        overlayStyle={{\n          zIndex: 98,\n        }}\n        contentStyle={{\n          borderRadius: '5px',\n          boxShadow: '0 2px 10px 0 rgba(0, 0, 0, .2), 0 0 0 1px rgba(32, 34, 37, .6)',\n          overflow: 'hidden',\n          width: '200px',\n          whiteSpace: 'nowrap',\n          fontFamily: 'main3',\n          color: '#fff',\n          border: 'none',\n          fontSize: '14px',\n          display: 'flex',\n          padding: '0',\n          display: 'flex',\n          flexDirection: 'column',\n          backgroundColor: 'black',\n          overflow: 'auto',\n          zIndex: 99,\n          transition: 'transform 200ms ease-in-out'\n        }}\n      >\n        <div className=\"user-popup\">\n          <div className=\"user-popup-top\">\n            <div className=\"user-popup-img\" style={this.props.user.image_url ? { backgroundImage: `url(${this.props.user.image_url})` } : {}}>\n              <div className=\"popup-online-indicator\" style={this.props.user.online ? { backgroundColor: '#43b581', boxShadow: 'inset 0 0 0 2px rgba(180,225,205,.6)' } : { backgroundColor: '#747f8d', boxShadow: 'inset 0 0 0 2px rgba(199, 204, 209, .6)'}}></div>\n            </div>\n            <h5>{this.props.user.username}</h5>\n          </div>\n          <div className=\"user-popup-bottom\">\n            {this.props.user.id === this.props.currentUserId || !this.props.showMessageButton ? null : <button className=\"user-popup-button\"\n              onClick={this.handleClick}\n              id=\"dm-button\"\n            >Message</button>}\n            {showFriendButton ? <button className=\"user-popup-button\"\n              onClick={this.addFriend}\n            >Add Friend</button> : null}\n          </div>\n        </div>\n      </Popup>\n    );\n  }\n}\n\nexport default UserPopup; ","import { connect } from 'react-redux';\nimport { createDmChannel } from '../../../actions/channel_actions';\nimport { createFriendRequest } from '../../../actions/friends_actions';\nimport UserPopup from './user_popup';\nimport { withRouter } from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUserId: state.session.id,\n    friendRequests: Object.values(state.entities.friendRequests),\n    friends: state.entities.friends,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createDmChannel: userId => dispatch(createDmChannel(userId)),\n    createFriendRequest: request => dispatch(createFriendRequest(request))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UserPopup));\n","import React from \"react\";\nimport UserPopup from \"../modal/user_popup_container\";\nimport { withRouter } from 'react-router-dom';\nimport moment from 'moment-timezone';\n// import MicrolinkCard from '@microlink/react';\n\nclass Message extends React.Component {\n  parseDate() {\n    const time = moment(this.props.time).tz('America/New_York');\n    return time.calendar();\n  }\n\n  transition() {\n    const popUp = document.getElementsByClassName('popup-content');\n    popUp[0].style.transform = 'translate(-10px, 0)';\n  }\n\n  parseLinks(body) {\n    const lines = body.split('\\n');\n\n    return lines.map((line, j) => {\n      const words = line.split(/\\s/);\n      const content = [];\n      const that = this;\n\n      words.map((word, i) => {\n        let separator = i < (words.length - 1) ? ' ' : '';\n        if (word.match(/([a-z\\-_0-9\\/\\:\\.]*\\.(jpg|jpeg|png|gif))/i)) {\n          content.push(\n            <a href={word} target=\"_blank\" className=\"message-media\" key={i}>\n              <img src={word} onLoad={() => that.props.bottom.scrollIntoView()}/>\n            </a>\n          );\n        } else if (word.match('^(https?\\:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$')) {\n          content.push(\n            <div className=\"youtube-container\" key={i}>\n              <div className=\"red-bar\"></div>\n              <main>\n                <h2>YouTube</h2>\n                <iframe\n                  src={word.replace(\"watch?v=\", \"embed/\")}\n                  allowFullScreen></iframe>\n              </main>\n            </div>\n          );\n        // } else if (word.match(/(http|https|ftp|ftps)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(\\/\\S*)?/)) {\n        //   content.push(\n        //     <MicrolinkCard\n        //       url={word}\n        //       target='_blank'\n        //       key={i}\n        //     />\n        //   );\n        } else {\n          content.push(word + separator);\n        }\n      });\n\n      if (typeof content[content.length - 1] === 'string' && j < lines.length - 1) {\n        return content.concat(<br key={j + 9999} />);\n      } else {\n        return content;\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"message\">\n        <UserPopup component={\n          <div className=\"user-image\" style={this.props.user.image_url ? { backgroundImage: `url(${this.props.user.image_url})` } : {}}></div>\n        }\n          user={this.props.user}\n          position={'right center'}\n          offsetX={2}\n          offsetY={60}\n          onOpen={this.transition}\n          showMessageButton={this.props.showMessageButton}\n        />\n        <div className=\"username-message\">\n          <div className=\"username-time\">\n            <UserPopup component={\n              <h4>{this.props.user.username}</h4>\n            }\n              user={this.props.user}\n              position={'right center'}\n              offsetX={2}\n              offsetY={72}\n              onOpen={this.transition}\n              showMessageButton={this.props.showMessageButton}\n            />\n            <h5>{this.parseDate()}</h5>\n          </div>\n          <div className=\"message-p-wrapper\">\n            <div className=\"message-content\">{this.parseLinks(this.props.message)}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Message);","import React from 'react';\nimport MessageForm from '../message_form';\nimport Message from '../message';\nimport { union } from 'lodash';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { messages: [] };\n\n    this.bottom = React.createRef();\n    this.parseNewMessage = this.parseNewMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const channelId = this.props.match.params.channelId;\n    if (!this.props.loading) {\n      this.subscribe(channelId);\n    }\n\n    if (channelId && !this.props.channel.serverId) {\n      const notification = document.getElementById(`dm-notification-${channelId}`);\n\n      if (notification) {\n        notification.className = 'dm-notification';\n        setTimeout(() => this.props.removeDmNotification(channelId), 200);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const channelId = this.props.match.params.channelId;\n\n    if (prevProps.loading && !this.props.loading && !this.messagesLoaded) {\n      this.subscribe(channelId);\n    }\n\n    if (channelId && prevProps.channelId !== channelId) {\n      this.messageStr = null;\n      this.time = null;\n      this.lastAuthorId = null;\n      this.messageId = null;\n      this.setState({ messages: [] });\n      this.messagesLoaded = false;\n\n      if (this.subscription) this.subscription.unsubscribe();\n\n      if (!this.props.loading && !this.messagesLoaded) this.subscribe(channelId);\n\n      if (channelId && !this.props.channel.serverId) {\n        const notification = document.getElementById(`dm-notification-${channelId}`);\n        if (notification) {\n          notification.className = 'dm-notification';\n          setTimeout(() => this.props.removeDmNotification(channelId), 200);\n        }\n      }\n    }\n\n    if (this.messagesLoaded && !this.scrolled) {\n      this.bottom.current.scrollIntoView();\n      this.scrolled = true;\n    }\n  }\n\n  subscribe(channelId) {\n    this.subscription = App.cable.subscriptions.subscriptions.find((subscription) => (\n      subscription.identifier === `{\"channel\":\"ChatChannel\",\"channelId\":\"${channelId}\"}`\n    ));\n\n    if (this.subscription) {\n      this.subscription.load({ channelId });\n    } else {\n      const that = this;\n      this.subscription = App.cable.subscriptions.create(\n        { channel: \"ChatChannel\", channelId },\n        {\n          received: data => {\n            switch (data.type) {\n              case \"message\":\n                this.scrolled = false;\n                this.parseNewMessage(data.message);\n                break;\n              case \"messages\":\n                this.scrolled = false;\n                this.messagesLoaded = true;\n                this.setState({ messages: this.parseMessages(data.messages) });\n                break;\n              case \"error\":\n                const server = that.props.server;\n                that.props.removeChannel(channelId);\n                that.props.history.push(`/channels/${server.id}/${server.root_channel}`);\n                break;\n            }\n          },\n          speak: function (data) { return this.perform(\"speak\", data); },\n          load: function (data) { return this.perform(\"load\", data); }\n        }\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n\n  parseMessages(messages) {\n    const messageArr = [];\n\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n\n      if (i === 0) {\n        if (messages.length === 1) {\n          messageArr.push(\n            <Message key={message.id}\n              message={message.body}\n              user={this.props.users[message.author_id] || {}}\n              time={message.created_at}\n              showMessageButton={this.props.channel.server_id ? true : false}\n              bottom={this.bottom.current}\n            />);\n        }\n\n        this.messageStr = message.body;\n        this.time = message.created_at;\n        this.lastAuthorId = message.author_id;\n        this.messageId = message.id;\n      } else if (i === messages.length - 1) {\n        if (message.author_id === this.lastAuthorId) {\n          this.messageStr = this.messageStr + '\\n' + message.body;\n          messageArr.push(\n            <Message key={this.messageId}\n              message={this.messageStr}\n              user={this.props.users[this.lastAuthorId] || {}}\n              time={this.time}\n              showMessageButton={this.props.channel.server_id ? true : false}\n              bottom={this.bottom.current}\n            />\n          )\n        } else {\n          messageArr.push(\n            <Message key={this.messageId}\n              message={this.messageStr}\n              user={this.props.users[this.lastAuthorId] || {}}\n              time={this.time}\n              showMessageButton={this.props.channel.server_id ? true : false}\n              bottom={this.bottom.current}\n            />);\n\n          messageArr.push(\n            <Message key={message.id}\n              message={message.body}\n              user={this.props.users[message.author_id] || {}}\n              time={message.created_at}\n              showMessageButton={this.props.channel.server_id ? true : false}\n              bottom={this.bottom.current}\n            />);\n\n          this.messageStr = message.body;\n          this.time = message.created_at;\n          this.lastAuthorId = message.author_id;\n          this.messageId = message.id;\n        }\n      } else if (message.author_id === this.lastAuthorId) {\n        this.messageStr = this.messageStr + '\\n' + message.body;\n      } else {\n        messageArr.push(\n          <Message key={this.messageId}\n            message={this.messageStr}\n            user={this.props.users[this.lastAuthorId] || {}}\n            time={this.time}\n            showMessageButton={this.props.channel.server_id ? true : false}\n            bottom={this.bottom.current}\n          />);\n\n        this.messageStr = message.body;\n        this.time = message.created_at;\n        this.messageId = message.id;\n        this.lastAuthorId = message.author_id;\n      }\n    }\n\n    return messageArr\n  }\n\n  parseNewMessage(message) {\n    if (message.author_id === this.lastAuthorId) {\n      this.messageStr = this.messageStr + '\\n' + message.body;\n      const newMessages = union([], this.state.messages);\n\n      newMessages[newMessages.length - 1] = (\n        <Message key={this.messageId}\n          message={this.messageStr}\n          user={this.props.users[this.lastAuthorId] || {}}\n          time={this.time}\n          showMessageButton={this.props.channel.server_id ? true : false}\n          bottom={this.bottom.current}\n        />);\n\n      this.setState({\n        messages: newMessages\n      });\n    } else {\n      this.messageStr = message.body;\n      this.time = message.created_at;\n      this.lastAuthorId = message.author_id;\n      this.messageId = message.id;\n\n      this.setState({\n        messages: this.state.messages.concat(\n          <Message key={message.id}\n            message={message.body}\n            user={this.props.users[message.author_id] || {}}\n            time={message.created_at}\n            showMessageButton={this.props.channel.server_id ? true : false}\n          />)\n      });\n    }\n  }\n\n  render() {\n    let emptyMessage = null;\n\n    if (this.props.channel.name === \"general\") {\n      emptyMessage = (\n        <div className=\"welcome-message\">\n          <h2>{`welcome to the server, ${this.props.currentUser.username}!`}</h2>\n          <div>\n            <div className=\"server-welcome-item\">\n              <div className=\"exclamation-icon\"></div>\n              <p><strong>Rift</strong> is a clone of the awesome Discord app! This site is purely for educational purposes.</p>\n            </div>\n            <div className=\"server-welcome-item\">\n              <div className=\"comp-icon\"></div>\n              <p><strong>Learn about Rift</strong> by exploring the site or visiting the github repo <a href=\"https://github.com/Vor-Tech/Rift\" target=\"_blank\">here!</a></p>\n            </div>\n            {/* <div className=\"server-welcome-item\">\n              <div className=\"personal-icon\"></div>\n              <p><strong>Learn about the developer</strong> and my other projects by visiting my website <a href=\"https://www.jeffdeliso.com\" target=\"_blank\">here!</a></p>\n            </div> */}\n            <div className=\"server-welcome-item\">\n              <div className=\"phone-icon\"></div>\n              <p><strong>Reach me</strong> via <a href=\"https://www.linkedin.com/in/jonathankurtz/\" target=\"_blank\">LinkedIn</a> or send me an email at <a href=\"mailto: crucio715@gmail.com\">crucio715@gmail.com</a>!</p>\n            </div>\n          </div>\n          <div className=\"empty-chat empty-welcome\">\n          </div>\n        </div>\n      )\n    } else {\n      if (this.props.channel.name && this.props.match.params.serverId) {\n        emptyMessage = <div className=\"empty-chat\"><h4>Welcome to the beginning of the <strong>{`#${this.props.channel.name}`}</strong> channel.</h4></div>;\n      } else if (this.props.channel.name) {\n        const nameArr = this.props.channel.name.split('-');\n        let userId;\n\n        if (nameArr[0] == this.props.currentUser.id) {\n          userId = nameArr[1];\n        } else {\n          userId = nameArr[0];\n        }\n\n        emptyMessage = emptyMessage = <div className=\"empty-chat\"><h4>This is the beginning of your direct message history with <strong>{this.props.users[userId] ? `@${this.props.users[userId].username}` : ''}</strong></h4></div>;\n      }\n    }\n\n    return (\n      <div className=\"chat-main\">\n        <div className=\"message-wrapper\">\n          <div className=\"message-scroll-wrapper\">\n            <div className=\"message-list\">\n              {emptyMessage}\n              {this.state.messages}\n              <div ref={this.bottom} />\n            </div>\n          </div>\n        </div>\n        <MessageForm\n          user={this.props.currentUser}\n          channel={this.props.channel}\n          channelId={this.props.channelId}\n          users={this.props.users}\n          subscription={this.subscription}\n        />\n      </div >\n    )\n  }\n}\n\nexport default Chat;","export const RECEIVE_DM_NOTIFICATION = 'RECEIVE_DM_NOTIFICATION';\nexport const REMOVE_DM_NOTIFICATION = 'REMOVE_DM_NOTIFICATION';\n\n\nexport const receiveDmNotification = (notification) => ({\n  type: RECEIVE_DM_NOTIFICATION,\n  notification\n});\n\nexport const removeDmNotification = (channelId) => ({\n  type: REMOVE_DM_NOTIFICATION,\n  channelId,\n});","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Chat from './chat';\nimport { removeDmNotification } from '../../../../actions/notification_actions';\nimport { removeChannel } from '../../../../actions/channel_actions';\n\nconst mapStateToProps = (state, ownProps) => {\n  const channelId = ownProps.match.params.channelId;\n  const channel = state.entities.channels[channelId] || {};\n  const server = state.entities.servers[channel.server_id] || {};\n  \n  return {\n    currentUser: state.entities.users[state.session.id],\n    channelId,\n    users: state.entities.users,\n    channel,\n    server,\n    loading: state.ui.loading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeDmNotification: channelId => dispatch(removeDmNotification(channelId)),\n    removeChannel: channelId => dispatch(removeChannel(channelId)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Chat));\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport UserPopup from '../modal/user_popup_container';\n\nclass ServerMember extends React.Component {\n\n  transition() {\n    const popUp = document.getElementsByClassName('popup-content');\n    popUp[0].style.transform = 'translate(10px, 0)';\n  }\n\n  render() {\n    return (\n      <UserPopup component={\n        <div className=\"server-member\">\n          <div className=\"server-member-img\" style={this.props.user.image_url ? { backgroundImage: `url(${this.props.user.image_url})` } : {}}>\n            <div\n              className=\"server-member-status-indicator\"\n              style={this.props.user.online ? { backgroundColor: '#43b581' } : { backgroundColor: '#747f8d' }}\n            ></div>\n          </div>\n          <span>{this.props.user.username}</span>\n        </div>\n      }\n        onOpen={this.transition}\n        user={this.props.user}\n        position={\"left center\"}\n        offsetX={-5}\n        offsetY={this.props.admin ? 10 : -90}\n        showMessageButton={true}\n      />\n    )\n  }\n}\n\nexport default withRouter(ServerMember);","import React from 'react';\nimport ServerMember from '../server_member';\n\nclass ServerMembers extends React.Component {\n\n  componentWillMount() {\n    this.props.beginLoading();\n  }\n\n  componentDidMount() {\n    this.props.fetchMembers(this.props.match.params.serverId).then(this.props.finishLoading);\n  }\n\n  componentWillUpdate(prevProps) {\n    if (prevProps.server.id && prevProps.server.id != this.props.match.params.serverId) {\n      this.props.beginLoading();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.server.id && prevProps.server.id != this.props.match.params.serverId) {\n      this.props.fetchMembers(this.props.match.params.serverId).then(this.props.finishLoading);\n    }\n  }\n\n  render() {\n    const admin = this.props.members.find((member) => {\n      return member.id === this.props.server.admin_id;\n    });\n\n    let adminEl;\n    let adminOnline;\n    let adminOffline;\n\n    if (admin) {\n      adminEl = <ServerMember user={admin} admin={true} />;\n      if (admin.online) {\n        adminOnline = 1;\n        adminOffline = 0;\n      } else {\n        adminOnline = 0;\n        adminOffline = 1;\n      }\n    } else {\n      adminEl = null;\n    }\n\n    const online = this.props.members.filter(member => member.online);\n    const offline = this.props.members.filter(member => !member.online);\n\n    const onlineMembers = online.map((member, idx) => {\n      if (member.id === this.props.server.admin_id) {\n        return null;\n      } else {\n        return <ServerMember key={idx} user={member} />;\n      }\n    });\n\n    const offlineMembers = offline.map((member, idx) => {\n      if (member.id === this.props.server.admin_id) {\n        return null\n      } else {\n        return <ServerMember key={idx} user={member} />;\n      }\n    });\n\n    return (\n      <div className={`server-members ${this.props.classText}`} >\n        <div className=\"server-members-scroll\">\n          <div className=\"server-members-container\">\n            <h3>ADMIN</h3>\n            {adminEl}\n            {online.length - adminOnline > 0 ? <h3>{`ONLINE—${online.length - adminOnline}`}</h3> : null}\n            {onlineMembers}\n            {offline.length - adminOffline > 0 ? <h3>{`OFFLINE—${offline.length - adminOffline}`}</h3> : null}\n            {offlineMembers}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ServerMembers;","export const BEGIN_LOADING = 'BEGIN_LOADING';\nexport const FINISH_LOADING = 'FINISH_LOADING';\n\n\nexport const beginLoading = () => ({\n  type: BEGIN_LOADING,\n});\n\nexport const finishLoading = () => ({\n  type: FINISH_LOADING,\n});","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ServerMembers from './server_members';\nimport { fetchMembers } from '../../../../actions/server_actions';\nimport { beginLoading, finishLoading } from '../../../../actions/ui_actions';\n\nconst mapStateToProps = (state, ownProps) => {\n  const server = state.entities.servers[ownProps.match.params.serverId] || {};\n  return {\n    server,\n    members: Object.values(state.entities.users).filter(user => user.servers.includes(server.id)).sort((a, b) => {\n      if (a.username < b.username) { return -1; }\n      if (a.username > b.username) { return 1; }\n      return 0;\n    })\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMembers: id => dispatch(fetchMembers(id)),\n    beginLoading: () => dispatch(beginLoading()),\n    finishLoading: () => dispatch(finishLoading()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ServerMembers));\n\n","import React from 'react';\nimport Header from '../header/header/header_container';\nimport Chat from '../chat/chat/chat_container';\nimport ServerMembers from '../server_members/server_members/server_members_container';\n\nclass ServerMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showMembers: true, classText: 'members-transition-left' };\n    this.toggleShowMembers = this.toggleShowMembers.bind(this);\n  }\n\n  toggleShowMembers() {\n    const { showMembers } = this.state;\n\n    if (showMembers) {\n      this.setState({ classText: \"members-transition-right\" });\n      setTimeout(() => this.setState({ showMembers: !showMembers }), 200);\n    } else {\n      this.setState({ showMembers: !showMembers });\n      setTimeout(() => this.setState({ classText: 'members-transition-left' }), 1);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chat-container\">\n        <Header toggleShowMembers={this.toggleShowMembers} />\n        <div className=\"chat-main-container\">\n          <Chat />\n          {this.state.showMembers ? <ServerMembers classText={this.state.classText} /> : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ServerMain;","import React from 'react';\nimport Channels from '../channels/channels/channels_container';\nimport ServerMain from './server_main';\n\nclass ServerRoute extends React.Component {\n  render() {\n    return (\n      <>\n        <Channels />\n        <ServerMain />\n      </>\n    )\n  }\n}\n\nexport default ServerRoute;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass DmChannel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { active: false };\n\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleMouseEnter() {\n    this.setState({ active: true });\n  }\n\n  handleMouseLeave() {\n    this.setState({ active: false });\n  }\n\n  handleDelete(e) {\n    e.preventDefault();\n    const channelId = this.props.channel.id;\n    const notification = document.getElementById(`dm-notification-${channelId}`);\n    \n    if (notification) {\n      notification.className = 'dm-notification';\n      setTimeout(() => this.props.removeDmNotification(channelId), 200);\n    }\n    \n    const that = this;\n    this.props.deleteDmChannel().then((action) => {\n      if (action.channelId == that.props.match.params.channelId) {\n        that.props.history.push(`/channels/@me`);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <NavLink to={`/channels/@me/${this.props.channel.id}`}\n        className=\"channel\"\n        activeClassName=\"selected\"\n        style={{ height: '40px' }}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        <div className=\"server-member-img\" style={{ backgroundImage: `url(${this.props.user.image_url})`, marginLeft: 0 }}>\n          <div\n            className=\"server-member-status-indicator\"\n            style={this.props.user.online ? { backgroundColor: '#43b581' } : { backgroundColor: '#747f8d' }}\n          ></div>\n        </div>\n        <div className=\"channel-name\">{this.props.user.username}</div>\n        {this.state.active ? <button className=\"delete-channel-button\" onClick={this.handleDelete}></button> : null}\n      </NavLink >\n    )\n  };\n};\n\nexport default withRouter(DmChannel);","import React from 'react';\nimport DmChannel from './dm_channel';\nimport UserBar from '../user_bar/user_bar_container';\nimport { NavLink } from 'react-router-dom';\n\nclass DMChannels extends React.Component {\n  render() {\n    const that = this;\n    const channels = this.props.channels.map((channel, idx) => {\n      const nameArr = channel.name.split('-');\n      let userId;\n      \n      if (nameArr[0] == this.props.currentUser.id) {\n        userId = nameArr[1];\n      } else {\n        userId = nameArr[0];\n      }\n\n      return <DmChannel\n        channel={channel}\n        user={that.props.users[userId] || {}}\n        key={idx}\n        deleteDmChannel={() => this.props.deleteDmChannel(channel.id)}\n        removeDmNotification={this.props.removeDmNotification}\n      />;\n    });\n\n    return (\n      <div className=\"right-main\">\n        <div className=\"channels\">\n          <NavLink to={`/channels/@me`}\n            exact={true}\n            className=\"friends-link\"\n            activeClassName=\"friends-link-active\"\n          >\n            <svg className=\"friends-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><g fill=\"none\" fillRule=\"evenodd\"><path fill=\"currentColor\" fillRule=\"nonzero\" d=\"M0.5,0 L0.5,1.5 C0.5,5.65 2.71,9.28 6,11.3 L6,16 L21,16 L21,14 C21,11.34 15.67,10 13,10 C13,10 12.83,10 12.75,10 C8,10 4,6 4,1.5 L4,0 L0.5,0 Z M13,0 C10.790861,0 9,1.790861 9,4 C9,6.209139 10.790861,8 13,8 C15.209139,8 17,6.209139 17,4 C17,1.790861 15.209139,0 13,0 Z\" transform=\"translate(2 4)\"></path><path d=\"M0,0 L24,0 L24,24 L0,24 L0,0 Z M0,0 L24,0 L24,24 L0,24 L0,0 Z M0,0 L24,0 L24,24 L0,24 L0,0 Z\"></path></g></svg>\n            <span className=\"server-name\">Friends</span>\n            {this.props.requestCount ? <div className=\"friends-request-counter\">{this.props.requestCount}</div> : null}\n          </NavLink>\n          <div className=\"channel-scroll-wrapper\">\n            <div className=\"channel-overflow-container\">\n              <div className=\"channel-list\">\n                <div className=\"text-channels-label\">\n                  <div>\n                    <h3 id=\"text-channels\">DIRECT MESSAGES</h3>\n                  </div>\n                </div>\n                {channels}\n              </div>\n            </div>\n          </div>\n          <UserBar />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DMChannels;","import { withRouter } from 'react-router-dom';\nimport { logout } from '../../../../actions/session_actions';\nimport DMChannels from './dm_channels';\nimport { connect } from 'react-redux';\nimport { fetchDmChannels, deleteDmChannel } from '../../../../actions/channel_actions';\nimport { removeDmNotification } from '../../../../actions/notification_actions';\n\nconst mapStateToProps = (state) => {\n  const incomingRequests = Object.values(state.entities.friendRequests).filter((request) => {\n    return request.friend_id === state.session.id;\n  }).length;\n\n  return {\n    currentUser: state.entities.users[state.session.id],\n    channels: Object.values(state.entities.channels).filter(channel => !channel.server_id),\n    users: state.entities.users,\n    requestCount: incomingRequests,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDmChannels: () => dispatch(fetchDmChannels()),\n    logout: () => dispatch(logout()),\n    deleteDmChannel: id => dispatch(deleteDmChannel(id)),\n    removeDmNotification: channelId => dispatch(removeDmNotification(channelId)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DMChannels));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass MeHeader extends React.Component {\n  render() {\n    let title;\n    if (this.props.channel.name) {\n      const nameArr = this.props.channel.name.split('-');\n      let userId;\n      \n      if (nameArr[0] == this.props.currentUser.id) {\n        userId = nameArr[1];\n      } else {\n        userId = nameArr[0];\n      }\n\n      if (this.props.users[userId]) {\n        title = this.props.users[userId].username;\n      } else {\n        title = '';\n      }\n    } else {\n      title = this.props.currentUser.username;\n    }\n    \n    return (\n      <header className=\"chat-header\">\n        <div style={{ display: 'flex', paddingBottom: '2px'}}>\n          <svg className=\"hash\" color=\"#72767d\" viewBox=\"0 0 16 16\" background=\"background-1FptAZ\" width=\"16\" height=\"16\"><path fill=\"currentColor\" fillRule=\"evenodd\" d=\"M12.93356,11.6546 C13.13504,11.87168 13.13504,12.22376 12.91352,12.41996 C12.35936,12.90956 11.72696,13.2806 11.01608,13.53128 C10.1348,13.8446 9.2054,14 8.22764,14 C7.29272,14 6.44096,13.85264 5.675,13.5554 C4.90892,13.2608 4.25264,12.84812 3.71156,12.3206 C3.16784,11.79296 2.74724,11.16068 2.44724,10.42412 C2.14736,9.68744 2,8.88392 2,8.01344 C2,7.15352 2.16344,6.35804 2.4902,5.62676 C2.81696,4.89548 3.26156,4.26068 3.82676,3.72224 C4.39196,3.18392 5.05088,2.76332 5.80892,2.45528 C6.56156,2.15264 7.37048,2 8.22764,2 C8.96684,2 9.6848,2.10716 10.37852,2.32148 C11.075,2.5358 11.69108,2.8598 12.22952,3.28844 C12.76784,3.71972 13.19648,4.2554 13.51784,4.90088 C13.83932,5.54648 14,6.30452 14,7.175 C14,7.82048 13.91168,8.39108 13.73216,8.88392 C13.55276,9.3794 13.31444,9.79196 13.01444,10.12676 C12.71444,10.46156 12.37424,10.71056 11.98844,10.87676 C11.60276,11.04284 11.19836,11.12576 10.77512,11.12576 C10.3412,11.12576 9.99296,11.024 9.73052,10.82048 C9.47072,10.61684 9.33944,10.35704 9.33944,10.04636 L9.25904,10.04636 C9.09572,10.30352 8.84648,10.54988 8.50904,10.78028 C8.1716,11.01068 7.75904,11.1284 7.26884,11.1284 C6.52952,11.1284 5.95904,10.88732 5.55716,10.40252 C5.1554,9.91772 4.95452,9.29084 4.95452,8.5142 C4.95452,8.06144 5.02952,7.61684 5.18216,7.17488 C5.3348,6.73292 5.55188,6.34184 5.83304,5.99636 C6.11432,5.65352 6.45176,5.37488 6.84284,5.16596 C7.23392,4.95704 7.66784,4.85264 8.14736,4.85264 C8.55992,4.85264 8.90816,4.93832 9.19196,5.1098 C9.47324,5.28128 9.65816,5.49284 9.74648,5.73932 L9.76256,5.73932 L9.78716,5.61884 C9.84608,5.3288 10.1336,5.09384 10.42952,5.09384 L10.80992,5.09384 C11.10596,5.09384 11.2964,5.32844 11.23556,5.618 L10.70552,8.14472 C10.68404,8.29472 10.65452,8.4608 10.61708,8.6456 C10.57964,8.82788 10.5608,8.99924 10.5608,9.16268 C10.5608,9.34484 10.59572,9.49748 10.66808,9.62336 C10.73768,9.7466 10.877,9.80828 11.08316,9.80828 C11.5064,9.80828 11.85728,9.58316 12.13592,9.13064 C12.4118,8.678 12.551,8.0726 12.551,7.30916 C12.551,6.66368 12.4412,6.09044 12.22424,5.5922 C12.00716,5.09132 11.70452,4.67348 11.31884,4.33328 C10.93316,3.99584 10.47236,3.73868 9.94196,3.5672 C9.40904,3.39572 8.82776,3.31004 8.19836,3.31004 C7.51256,3.31004 6.8858,3.43052 6.31532,3.67172 C5.74472,3.9128 5.25728,4.2476 4.8554,4.67084 C4.45364,5.09672 4.14032,5.59496 3.91796,6.17084 C3.69296,6.74408 3.58052,7.36556 3.58052,8.03252 C3.58052,8.74232 3.69836,9.38252 3.9314,9.953 C4.16444,10.52348 4.49396,11.0084 4.91708,11.4128 C5.3402,11.8172 5.8466,12.12536 6.43316,12.33968 C7.01984,12.55388 7.66796,12.66104 8.37248,12.66104 C9.25376,12.66104 10.0118,12.52184 10.6466,12.24056 C11.12396,12.03116 11.57228,11.75948 11.99228,11.42708 C12.224,11.2436 12.56144,11.2538 12.76292,11.47076 L12.93356,11.6546 Z M8.1956,6.17852 C7.93568,6.17852 7.7054,6.25352 7.5098,6.40352 C7.3142,6.55352 7.14824,6.74372 7.01156,6.97676 C6.875,7.20716 6.77324,7.4642 6.70088,7.74284 C6.63116,8.02148 6.59372,8.29208 6.59372,8.54912 C6.59372,8.67764 6.60716,8.81432 6.63392,8.96168 C6.66068,9.10628 6.7142,9.2402 6.79724,9.36608 C6.87764,9.4892 6.98468,9.59108 7.11596,9.67148 C7.24724,9.75188 7.42136,9.79208 7.63832,9.79208 C7.93292,9.79208 8.18204,9.7196 8.38832,9.575 C8.5946,9.4304 8.76332,9.24812 8.8946,9.02588 C9.02588,8.80628 9.1196,8.5652 9.18128,8.30816 C9.2402,8.051 9.2696,7.81256 9.2696,7.59824 C9.2696,7.42676 9.25352,7.25804 9.22148,7.08932 C9.18932,6.92324 9.13316,6.77324 9.05,6.63668 C8.9696,6.50276 8.85716,6.39296 8.7152,6.30716 C8.57588,6.22148 8.40188,6.17852 8.1956,6.17852 Z\"\n            transform=\"translate(1.5 2)\"></path></svg>\n          <span className=\"username\">{title}</span>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default MeHeader;","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport MeHeader from './me_header';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: state.entities.users[state.session.id],\n    users: state.entities.users,\n    channel: state.entities.channels[ownProps.match.params.channelId] || {},\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(MeHeader));\n","import React from 'react';\nimport Chat from '../chat/chat/chat_container';\nimport MeHeader from '../header/me_header/me_header_container';\n\nclass MeMain extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"chat-container\">\n          <MeHeader />\n          <div className=\"chat-main-container\">\n            <Chat />\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default MeMain;","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass FriendsHeader extends React.Component {\n  render() {\n    return (\n      <header className=\"chat-header\">\n        <ul className=\"friends-button-container\">\n          <li className={this.props.tab === 'all' ? \"friends-header-button-active\" : \"friends-header-button\"}\n            onClick={() => this.props.changeTab('all')}\n          >All</li>\n          <li className={this.props.tab === 'online' ? \"friends-header-button-active\" : \"friends-header-button\"}\n            onClick={() => this.props.changeTab('online')}\n          >Online</li>\n          <li className={this.props.tab === 'pending' ? \"friends-header-button-active\" : \"friends-header-button\"}\n            onClick={() => this.props.changeTab('pending')}\n          >Pending\n          {this.props.requestCount ? <div className=\"friends-request-header-counter\">{this.props.requestCount}</div> : null}\n          </li>\n        </ul>\n      </header>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const incomingRequests = Object.values(state.entities.friendRequests).filter((request) => {\n    return request.friend_id === state.session.id;\n  }).length;\n\n  return {\n    requestCount: incomingRequests,\n  };\n};\n\nexport default connect(mapStateToProps)(FriendsHeader);","import React from 'react';\nimport Tooltip from '../modal/tooltip';\nimport { Link } from 'react-router-dom';\n\nclass MutualServer extends React.Component {\n  render() {\n    return (\n      <Tooltip component={\n        <Link to={`/channels/${this.props.server.id}/${this.props.server.root_channel}`}\n          onClick={e => e.stopPropagation()}\n          className=\"mutual-server\"\n          style={this.props.server.icon_url ?\n            { backgroundImage: `url(${this.props.server.icon_url})`, backgroundSize: '100%' } :\n            { backgroundSize: '100%' }}\n          onKeyDown={(e) => e.preventDefault()}\n        ></Link>\n      }\n        position=\"top center\"\n        text={this.props.server.name}\n      />\n    )\n  }\n}\n\nexport default MutualServer;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { intersection } from 'lodash';\nimport Tooltip from '../modal/tooltip';\nimport MutualServer from './mutual_server';\n\nclass Friend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClickParent = this.handleClickParent.bind(this);\n    this.handleReject = this.handleReject.bind(this);\n    this.handleAccept = this.handleAccept.bind(this);\n  }\n\n  handleClickParent() {\n    this.props.createDmChannel(this.props.user.id).then((action) => this.props.history.push(`/channels/@me/${action.channel.id}`));\n  }\n\n  handleReject(e) {\n    e.stopPropagation();\n    this.props.reject();\n  }\n\n  handleAccept(e) {\n    e.stopPropagation();\n    this.props.accept();\n  }\n\n  render() {\n    const mutualServerIds = intersection(this.props.currentUser.servers, this.props.user.servers);\n\n    let mutualServers;\n    if (mutualServerIds.length <= 6) {\n      mutualServers = mutualServerIds.map((serverId, idx) => {\n        const server = this.props.servers[serverId] || {};\n        return <MutualServer server={server} key={idx} />;\n      });\n    } else {\n      mutualServers = [];\n\n      for (let i = 0; i < 5; i++) {\n        const serverId = mutualServerIds[i];\n        const server = this.props.servers[serverId] || {};\n        mutualServers.push(<MutualServer server={server} key={i} />);\n      }\n\n      mutualServers.push(<div className=\"extra-servers\" key={mutualServerIds.length}>{`+${mutualServerIds.length - 5}`}</div>);\n    }\n\n    return (\n      <li className=\"friend-container\"\n        onClick={this.handleClickParent}\n        style={this.props.first ? { borderColor: 'transparent' } : {}}\n      >\n        <div className=\"friend-name-container\">\n          <div className=\"friend-icon\" style={this.props.user.image_url ? { backgroundImage: `url(${this.props.user.image_url})` } : {}}></div>\n          <h4>{this.props.user.username}</h4>\n        </div>\n        <div className=\"friend-status-container\">\n          <div\n            className=\"friends-status-indicator\"\n            style={this.props.user.online ? { backgroundColor: '#43b581' } : { backgroundColor: '#747f8d' }}\n          ></div>\n          <h4>{this.props.status}</h4>\n        </div>\n        <div className=\"mutual-servers-container\">\n          {mutualServers}\n        </div>\n        <div className=\"friend-accept-reject\">\n          {this.props.status === 'Incoming friend request' ?\n            <Tooltip component={\n              <button className=\"accept-friend\" onClick={this.handleAccept}></button>\n            }\n              position=\"top center\"\n              text='Accept'\n            />\n            : null}\n          <Tooltip component={\n            <button\n              className={this.props.status.includes('request') ? \"reject-friend\" : \"remove-friend\"}\n              onClick={this.handleReject}\n            ></button>\n          }\n            position=\"top center\"\n            text={this.props.status.includes('request') ? (this.props.status.includes('Outgoing') ? \"Cancel\" : \"Ignore\") : \"Remove Friend\"}\n          />\n        </div>\n      </li>\n    )\n  }\n}\n\nexport default withRouter(Friend);","import React from 'react';\nimport Friend from '../friend';\n\nclass Friends extends React.Component {\n  render() {\n    const friends = this.props.friends.map((friend, idx) => {\n      return <Friend\n        user={friend}\n        key={idx}\n        reject={() => this.props.deleteFriend(friend.id)}\n        createDmChannel={this.props.createDmChannel}\n        status={friend.online ? 'Online' : 'Offline'}\n        first={idx === 0}\n        currentUser={this.props.currentUser}\n        servers={this.props.servers}\n      />;\n    });\n\n    return (\n      <div className=\"friends-scroll-wrapper\">\n        <ul>\n          {friends}\n          {friends.length === 0 ? (this.props.allFriends ? (\n            <div className=\"empty-container\">\n              <div className=\"no-friends empty\"></div>\n              <h4>Wumpus has no friends. You could though!</h4>\n            </div>\n          ) : (\n              <div className=\"empty-container\">\n                <div className=\"online empty\"></div>\n                <h4>No one's around to play with Wumpus.</h4>\n              </div>\n            )) : null}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Friends;","import { connect } from 'react-redux';\nimport Friends from './friends';\nimport { deleteFriend } from '../../../../actions/friends_actions';\nimport { createDmChannel } from '../../../../actions/channel_actions';\n\nconst mapStateToProps = (state) => {\n  const friends = state.entities.friends.map((id) => {\n    return state.entities.users[id] || {};\n  }).sort((a, b) => {\n    if (a.username < b.username) { return -1; }\n    if (a.username > b.username) { return 1; }\n    return 0;\n  });\n\n  return {\n    friends,\n    currentUser: state.entities.users[state.session.id],\n    servers: state.entities.servers,\n    allFriends: true\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteFriend: (id) => dispatch(deleteFriend(id)),\n    createDmChannel: userId => dispatch(createDmChannel(userId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Friends);","import React from 'react';\nimport Friend from '../friend';\n\nclass PendingFriends extends React.Component {\n  render() {\n    const incomingFriends = this.props.incomingRequests.map((request, idx) => {\n      const user = this.props.users[request.user_id];\n      return <Friend\n        user={user}\n        key={idx}\n        status={'Incoming friend request'}\n        accept={() => this.props.acceptFriendRequest(request)}\n        reject={() => this.props.deleteFriendRequest(request)}\n        createDmChannel={this.props.createDmChannel}\n        first={idx === 0}\n        currentUser={this.props.currentUser}\n        servers={this.props.servers}\n      />;\n    });\n\n    const outgoingFriends = this.props.outgoingRequests.map((request, idx) => {\n      const user = this.props.users[request.friend_id];\n      return <Friend\n        user={user}\n        key={idx}\n        status={'Outgoing friend request'}\n        accept={() => this.props.acceptFriendRequest(request)}\n        reject={() => this.props.deleteFriendRequest(request)}\n        createDmChannel={this.props.createDmChannel}\n        first={idx === 0 && incomingFriends.empty}\n        currentUser={this.props.currentUser}\n        servers={this.props.servers}\n      />;\n    });\n\n    return (\n      <div className=\"friends-scroll-wrapper\">\n        <ul>\n          {incomingFriends}\n          {outgoingFriends}\n          {incomingFriends.length === 0 && outgoingFriends.length === 0 ?\n            <div className=\"empty-container\">\n              <div className=\"pending empty\"></div>\n              <h4>There are no pending friend requests. Here's a Wumpus for now.</h4>\n            </div>\n            : null}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default PendingFriends;","import { connect } from 'react-redux';\nimport PendingFriends from './pending_friends';\nimport { fetchFriendRequests, acceptFriendRequest, deleteFriendRequest } from '../../../../actions/friends_actions';\nimport { createDmChannel } from '../../../../actions/channel_actions';\n\nconst mapStateToProps = (state) => {\n  const outgoingRequests = Object.values(state.entities.friendRequests).filter((request) => {\n    return request.user_id === state.session.id;\n  });\n\n  const incomingRequests = Object.values(state.entities.friendRequests).filter((request) => {\n    return request.friend_id === state.session.id;\n  });\n\n  return {\n    users: state.entities.users,\n    incomingRequests,\n    outgoingRequests,\n    currentUser: state.entities.users[state.session.id],\n    servers: state.entities.servers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchFriendRequests: () => dispatch(fetchFriendRequests()),\n    acceptFriendRequest: (request) => dispatch(acceptFriendRequest(request)),\n    deleteFriendRequest: (request) => dispatch(deleteFriendRequest(request)),\n    createDmChannel: userId => dispatch(createDmChannel(userId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PendingFriends);","import { connect } from 'react-redux';\nimport Friends from './friends';\nimport { fetchFriends, deleteFriend } from '../../../../actions/friends_actions';\nimport { createDmChannel } from '../../../../actions/channel_actions';\n\n\nconst mapStateToProps = (state, ownProps) => {\n  const friends = state.entities.friends.map((id) => {\n    return state.entities.users[id] || {};\n  }).filter((friend) => {\n    return friend.online;\n  });\n\n  return {\n    friends,\n    currentUser: state.entities.users[state.session.id],\n    servers: state.entities.servers,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchFriends: () => dispatch(fetchFriends()),\n    deleteFriend: (id) => dispatch(deleteFriend(id)),\n    createDmChannel: userId => dispatch(createDmChannel(userId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Friends);","import React from 'react';\nimport FriendsHeader from '../friends/friends_header';\nimport Friends from '../friends/friends_list/friends_container';\nimport PendingFriends from '../friends/pending_friends/pending_friends_container';\nimport OnlineFriends from '../friends/friends_list/online_friends_container';\n\nclass FriendsMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { tab: 'all' };\n    this.changeTab = this.changeTab.bind(this);\n  }\n\n  changeTab(tabName) {\n    this.setState({ tab: tabName });\n  }\n\n  render() {\n    let component;\n    \n    if (this.state.tab === 'all') {\n      component = <Friends />\n    } else if (this.state.tab === 'online') {\n      component = <OnlineFriends />\n    } else {\n      component = <PendingFriends />\n    }\n\n    return (\n      <>\n        <div className=\"chat-container\">\n          <FriendsHeader changeTab={this.changeTab} tab={this.state.tab} />\n          <div className=\"chat-main-container\">\n            <div className=\"friends-list\">\n              <div className=\"friends-table-header\">\n                <div className=\"friends-column friends-name\">Name</div>\n                <div className=\"friends-column-separator\"></div>\n                <div className=\"friends-column friends-status\">Status</div>\n                <div className=\"friends-column-separator\"></div>\n                <div className=\"friends-column friends-servers\">Mutual Servers</div>\n                <div className=\"friends-column-separator\"></div>\n                <div className=\"friends-actions\"></div>\n              </div>\n              {component}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default FriendsMain;\n","import React from 'react';\nimport DMChannels from '../channels/dm_channels/dm_channels_container';\nimport MeMain from './me_main';\nimport { Route, Switch } from 'react-router-dom';\nimport FriendsMain from './friends_main';\n\nclass MeRoute extends React.Component {\n  render() {\n    return (\n      <>\n        <DMChannels />\n        <Switch >\n          <Route path=\"/channels/@me/:channelId\" component={MeMain} />\n          <Route path=\"/\" component={FriendsMain} />\n        </Switch >\n      </>\n    )\n  }\n}\n\nexport default MeRoute;\n","import React from 'react';\n\nconst LoadingScreen = (props) => {\n  return (\n    <div className={`loading-screen ${props.classText}`}>\n      <video height=\"200\" width=\"200\" autoPlay loop muted>\n        <source src=\"https://s3.amazonaws.com/discors-dev/Main/loading.webm\" type=\"video/webm\" />\n        <source src=\"https://s3.amazonaws.com/discors-dev/Main/loading.mp4\" type=\"video/mp4\" />\n        <img alt=\"\" src=\"https://s3.amazonaws.com/discors-dev/Main/loading.png\" />\n      </video>\n      <h5>{props.text}</h5>\n    </div>\n  )\n}\n\nexport default LoadingScreen;\n\n","import React from 'react';\nimport Servers from './servers/servers/servers_container';\nimport ServerRoute from './app_routes/server_route';\nimport { Route, Switch } from 'react-router-dom';\nimport MeRoute from './app_routes/me_route';\nimport { connect } from 'react-redux';\nimport { fetchCurrentUserData, receiveUser } from '../../actions/session_actions';\nimport LoadingScreen from './loading_screen';\nimport { receiveDmNotification } from '../../actions/notification_actions';\nimport { receiveChannel } from '../../actions/channel_actions';\nimport { receiveFriendRequest, removeFriendRequest, removeFriend, receiveFriend } from '../../actions/friends_actions';\nimport { beginLoading, finishLoading } from '../../actions/ui_actions';\n\nclass AppRoot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: false, class: '' };\n  }\n\n  componentWillMount() {\n    this.setState({ loading: 'connecting' });\n    this.props.beginLoading();\n  }\n\n  componentDidMount() {\n    document.body.style.overflow = \"hidden\";\n\n    this.notificationSubscription = App.cable.subscriptions.create(\n      { channel: \"NotificationsChannel\", userId: this.props.currentUser.id },\n      {\n        received: data => {\n          switch (data.type) {\n            case \"message\":\n              const channel = JSON.parse(data.channel);\n              const author = JSON.parse(data.user);\n              const notification = { channelId: channel.id, authorId: author.id };\n\n              if (this.props.location.pathname !== `/channels/@me/${channel.id}`) {\n                this.props.receiveChannel(channel);\n                this.props.receiveUser(author);\n                this.props.receiveDmNotification(notification);\n              }\n\n              break;\n            case \"friend_request\":\n              this.props.receiveUser(JSON.parse(data.user));\n              this.props.receiveFriendRequest(JSON.parse(data.friend_request));\n\n              break;\n            case \"friend_request_destroy\":\n              const request = JSON.parse(data.friend_request);\n              this.props.removeFriendRequest(request.id);\n\n              break;\n            case \"friend\":\n              const user = JSON.parse(data.user);\n              this.props.receiveUser(user);\n              this.props.receiveFriend(user.id);\n\n              break;\n            case \"friend_destroy\":\n              this.props.removeFriend(JSON.parse(data.user_id));\n\n              break;\n          }\n        },\n      }\n    );\n\n    this.props.fetchCurrentUserData().then(() => {\n      this.setState({ loading: 'ready' });\n      this.props.finishLoading();\n      setTimeout(() => {\n        this.setState({ class: 'hidden' });\n        setTimeout(() => {\n          this.setState({ loading: false, class: '' });\n        }, 200);\n      }, 1000);\n    });\n  }\n\n  componentWillUnmount() {\n    this.notificationSubscription.unsubscribe();\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <div className=\"main-body\">\n        {this.state.loading ? <LoadingScreen text={loading} classText={this.state.class} /> : null}\n        <Servers />\n        <Switch >\n          <Route path=\"/channels/@me/:channelId\" component={MeRoute} />\n          <Route path=\"/channels/@me\" component={MeRoute} />\n          <Route path=\"/channels/:serverId/:channelId\" component={ServerRoute} />\n          <Route path=\"/channels/:serverId\" component={ServerRoute} />\n          <Route path=\"/\" component={MeRoute} />\n        </Switch >\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.entities.users[state.session.id],\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCurrentUserData: () => dispatch(fetchCurrentUserData()),\n    receiveDmNotification: notification => dispatch(receiveDmNotification(notification)),\n    receiveUser: user => dispatch(receiveUser(user)),\n    receiveChannel: channel => dispatch(receiveChannel(channel)),\n    receiveFriendRequest: request => dispatch(receiveFriendRequest(request)),\n    removeFriendRequest: requestId => dispatch(removeFriendRequest(requestId)),\n    removeFriend: friendId => dispatch(removeFriend(friendId)),\n    receiveFriend: friendId => dispatch(receiveFriend(friendId)),\n    beginLoading: () => dispatch(beginLoading()),\n    finishLoading: () => dispatch(finishLoading()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppRoot);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport LoginForm from './session_form/login/login_form_container';\nimport SignupForm from './session_form/signup/signup_form_container';\nimport Splash from './splash/splash_container';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport AppRoot from './app/app_root';\n\nconst App = () => (\n  <Switch>\n    <AuthRoute path=\"/login\" component={LoginForm} />\n    <AuthRoute path=\"/register\" component={SignupForm} />\n    <ProtectedRoute path=\"/channels\" component={AppRoot} />\n    <Route path=\"/\" component={Splash} />\n  </Switch>\n);\n\nexport default App;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './app';\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;","import merge from 'lodash/merge';\nimport { RECEIVE_CURRENT_USER, RECEIVE_CURRENT_USER_DATA, RECEIVE_USER } from '../../actions/session_actions';\nimport { RECEIVE_USERS, REMOVE_SERVER, RECEIVE_SERVER } from '../../actions/server_actions';\nimport { RECEIVE_FRIENDS } from '../../actions/friends_actions';\n\nconst usersReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let newState;\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER_DATA:\n      return merge({}, state, action.currentUserData.users);\n    case RECEIVE_CURRENT_USER:\n      return merge({}, state, { [action.currentUser.id]: action.currentUser });\n    case RECEIVE_USER:\n      return merge({}, state, { [action.user.id]: action.user });\n    case RECEIVE_USERS:\n      return merge({}, state, action.users);\n    case RECEIVE_FRIENDS:\n      return merge({}, state, action.friendData.users);\n    case REMOVE_SERVER:\n      newState = merge({}, state);\n      newState[action.userId].servers = newState[action.userId].servers.filter(serverId => {\n        return serverId !== action.serverId;\n      });\n\n      return newState;\n    case RECEIVE_SERVER:\n      newState = merge({}, state);\n      if (!newState[action.userId].servers.includes(action.server.id)) {\n        newState[action.userId].servers.push(action.server.id);\n      } \n\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;","import merge from 'lodash/merge';\nimport { RECEIVE_SERVERS, RECEIVE_SERVER, REMOVE_SERVER } from '../../actions/server_actions';\nimport { RECEIVE_CURRENT_USER_DATA } from '../../actions/session_actions';\n\nconst serversReducer = (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER_DATA:\n      return action.currentUserData.servers || {};\n    case RECEIVE_SERVERS:\n      return merge({}, state, action.servers);\n    case RECEIVE_SERVER:\n      return merge({}, state, { [action.server.id]: action.server });\n    case REMOVE_SERVER:\n      const newState = merge({}, state);\n      delete newState[action.serverId];\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default serversReducer;\n","import merge from 'lodash/merge';\nimport { RECEIVE_CHANNELS, RECEIVE_CHANNEL, REMOVE_CHANNEL } from '../../actions/channel_actions';\nimport { RECEIVE_CURRENT_USER_DATA } from '../../actions/session_actions';\n\nconst channelsReducer = (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER_DATA:\n      return action.currentUserData.channels || {};\n    case RECEIVE_CHANNELS:\n      return merge({}, state, action.channels);\n    case RECEIVE_CHANNEL:\n      return merge({}, state, { [action.channel.id]: action.channel });\n    case REMOVE_CHANNEL:\n      const newState = merge({}, state);\n      delete newState[action.channelId];\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default channelsReducer;\n","import merge from 'lodash/merge';\nimport { RECEIVE_REQUESTS, REMOVE_REQUEST, RECEIVE_REQUEST } from '../../actions/friends_actions';\nimport { RECEIVE_CURRENT_USER_DATA } from '../../actions/session_actions';\n\nconst friendRequestsReducer = (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER_DATA:\n      return action.currentUserData.friend_requests || {};\n    case RECEIVE_REQUESTS:\n      return action.friendRequests || {};\n    case RECEIVE_REQUEST:\n      return merge({}, state, { [action.friendRequest.id]: action.friendRequest });\n    case REMOVE_REQUEST:\n      const newState = merge({}, state);\n      delete newState[action.requestId];\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default friendRequestsReducer;\n","import { RECEIVE_FRIENDS, RECEIVE_FRIEND, REMOVE_FRIEND } from \"../../actions/friends_actions\";\nimport { union } from 'lodash';\nimport { RECEIVE_CURRENT_USER_DATA } from \"../../actions/session_actions\";\n\nconst friendsReducer = (state = [], action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER_DATA:\n      return action.currentUserData.friends;\n    case RECEIVE_FRIENDS:\n      return action.friendData.friends;\n    case RECEIVE_FRIEND:\n      return union([], state, action.friend);\n    case REMOVE_FRIEND:\n      const newState = union([], state);\n      return newState.filter((friendId) => (\n        friendId !== action.friendId\n      ));\n    default:\n      return state;\n  }\n};\n\nexport default friendsReducer;\n","import merge from 'lodash/merge';\nimport { RECEIVE_VOICE_CHANNEL, RECEIVE_VOICE_CHANNELS, REMOVE_VOICE_CHANNEL } from '../../actions/voice_channel_actions';\nimport { RECEIVE_CURRENT_USER_DATA } from '../../actions/session_actions';\n\nconst voiceChannelsReducer = (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER_DATA:\n      return action.currentUserData.voice_channels || {};\n    case RECEIVE_VOICE_CHANNELS:\n      return merge({}, state, action.voiceChannels);\n    case RECEIVE_VOICE_CHANNEL:\n      return merge({}, state, { [action.voiceChannel.id]: action.voiceChannel });\n    case REMOVE_VOICE_CHANNEL:\n      const newState = merge({}, state);\n      delete newState[action.voiceChannelId];\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default voiceChannelsReducer;\n\n","\nimport { combineReducers } from 'redux';\nimport users from './users_reducer';\nimport servers from './servers_reducer';\nimport channels from './channels_reducer';\nimport friendRequests from './friend_requests_reducer';\nimport friends from './friends_reducer';\nimport voiceChannels from './voice_channels_reducer';\n\nexport default combineReducers({\n  users,\n  servers,\n  channels,\n  friendRequests,\n  friends,\n  voiceChannels,\n});\n","import { combineReducers } from 'redux';\nimport loading from './loading_reducer';\n\nexport default combineReducers({\n  loading,\n});","import { BEGIN_LOADING, FINISH_LOADING } from \"../actions/ui_actions\";\n\nexport default (state = false, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case BEGIN_LOADING:\n      return true;\n    case FINISH_LOADING:\n      return false;\n    default:\n      return state;\n  }\n};\n","import {\n  RECEIVE_CURRENT_USER,\n  LOGOUT_CURRENT_USER,\n  RECEIVE_CURRENT_USER_DATA,\n} from '../actions/session_actions';\n\nconst _nullUser = Object.freeze({\n  id: null\n});\n\nconst sessionReducer = (state = _nullUser, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER_DATA:\n      return { id: action.currentUserData.currentUserId };\n    case RECEIVE_CURRENT_USER:\n      return { id: action.currentUser.id };\n    case LOGOUT_CURRENT_USER:\n      return _nullUser;\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;\n","import { combineReducers } from 'redux';\nimport session from './session_errors_reducer';\nimport server from './server_errors_reducer';\nimport channel from './channel_errors_reducer';\n\nexport default combineReducers({\n  session,\n  server,\n  channel,\n});","import {\n  RECEIVE_SESSION_ERRORS,\n  RECEIVE_CURRENT_USER,\n  REMOVE_SESSION_ERRORS,\n} from '../../actions/session_actions';\n\nexport default (state = [], action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_SESSION_ERRORS:\n      return action.errors;\n    case RECEIVE_CURRENT_USER:\n      return [];\n    case REMOVE_SESSION_ERRORS:\n      return [];\n    default:\n      return state;\n  }\n};","import { RECEIVE_SERVER_ERRORS, RECEIVE_SERVER, REMOVE_SERVER_ERRORS } from '../../actions/server_actions';\n\nexport default (state = [], action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_SERVER_ERRORS:\n      return action.errors;\n    case RECEIVE_SERVER:\n      return [];\n    case REMOVE_SERVER_ERRORS:\n      return [];\n    default:\n      return state;\n  }\n};","import { RECEIVE_CHANNEL_ERRORS, RECEIVE_CHANNEL, REMOVE_CHANNEL_ERRORS } from '../../actions/channel_actions';\nimport { RECEIVE_VOICE_CHANNEL } from '../../actions/voice_channel_actions';\n\nexport default (state = [], action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_CHANNEL_ERRORS:\n      return action.errors;\n    case RECEIVE_CHANNEL:\n      return [];\n    case RECEIVE_VOICE_CHANNEL:\n      return [];\n    case REMOVE_CHANNEL_ERRORS:\n      return [];\n    default:\n      return state;\n  }\n};\n","import merge from 'lodash/merge';\nimport { RECEIVE_DM_NOTIFICATION, REMOVE_DM_NOTIFICATION } from '../../actions/notification_actions';\n\nconst dmNotificationsReducer = (state = {}, action) => {\n  let newState;\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_DM_NOTIFICATION:\n      if (state[action.notification.channelId]) {\n        newState = merge({}, state);\n        newState[action.notification.channelId].count++;\n        return newState;\n      } else {\n        return merge({}, state, { [action.notification.channelId]: merge(action.notification, { count: 1 }) });\n      }\n    case REMOVE_DM_NOTIFICATION:\n      newState = merge({}, state);\n      delete newState[action.channelId];\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default dmNotificationsReducer;\n","import { combineReducers } from 'redux';\nimport dm from './dm_notifications_reducer';\n\nexport default combineReducers({\n  dm,\n});","import { combineReducers } from 'redux';\nimport entities from './entities/entities_reducer';\nimport ui from './ui_reducer';\nimport session from './session_reducer';\nimport errors from './errors/errors_reducer';\nimport notifications from './notifications/notifications_reducer';\n\nconst rootReducer = combineReducers({\n  entities,\n  session,\n  errors,\n  ui,\n  notifications,\n});\n\nexport default rootReducer;","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers/root_reducer';\n\nconst localConfigureStore = (preloadedState = {}) => (\n  configureStore({\n    reducer: rootReducer,\n    preloadedState,\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger)\n  })\n);\n\nexport default localConfigureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\n// import { configureStore } from '@reduxjs/toolkit';\nimport configureStore from './store/store';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n  if (window.currentUser) {\n    const preloadedState = {\n      session: { id: window.currentUser.id },\n      entities: {\n        users: { [window.currentUser.id]: window.currentUser }\n      }\n    };\n    store = configureStore(preloadedState);\n    delete window.currentUser;\n  } else {\n    store = configureStore();\n  }\n  \n  const root = document.getElementById('root');\n  ReactDOM.render(<Root store={store} />, root);\n});"],"sourceRoot":""}